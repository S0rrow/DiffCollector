diff --git a/contrib/accumulo_sample/query/src/main/java/iterator/BooleanLogicIterator.java b/contrib/accumulo_sample/query/src/main/java/iterator/BooleanLogicIterator.java
index 92c52ffaff..07e2c084b3 100644
--- a/contrib/accumulo_sample/query/src/main/java/iterator/BooleanLogicIterator.java
+++ b/contrib/accumulo_sample/query/src/main/java/iterator/BooleanLogicIterator.java
@@ -1,19 +1,3 @@
-/*
-* Licensed to the Apache Software Foundation (ASF) under one or more
-* contributor license agreements.  See the NOTICE file distributed with
-* this work for additional information regarding copyright ownership.
-* The ASF licenses this file to You under the Apache License, Version 2.0
-* (the "License"); you may not use this file except in compliance with
-* the License.  You may obtain a copy of the License at
-*
-*     http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
 package iterator;
 
 import java.io.IOException;
@@ -31,14 +15,6 @@ import java.util.Map.Entry;
 import java.util.PriorityQueue;
 import java.util.Set;
 
-import org.apache.accumulo.core.data.ByteSequence;
-import org.apache.accumulo.core.data.Key;
-import org.apache.accumulo.core.data.PartialKey;
-import org.apache.accumulo.core.data.Range;
-import org.apache.accumulo.core.data.Value;
-import org.apache.accumulo.core.iterators.IteratorEnvironment;
-import org.apache.accumulo.core.iterators.OptionDescriber;
-import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
 import org.apache.commons.jexl2.parser.ASTAndNode;
 import org.apache.commons.jexl2.parser.ASTEQNode;
 import org.apache.commons.jexl2.parser.ASTERNode;
@@ -63,6 +39,14 @@ import parser.QueryParser.QueryTerm;
 import parser.RangeCalculator.RangeBounds;
 import parser.TreeNode;
 import util.FieldIndexKeyParser;
+import org.apache.accumulo.core.data.ByteSequence;
+import org.apache.accumulo.core.data.Key;
+import org.apache.accumulo.core.data.PartialKey;
+import org.apache.accumulo.core.data.Range;
+import org.apache.accumulo.core.data.Value;
+import org.apache.accumulo.core.iterators.IteratorEnvironment;
+import org.apache.accumulo.core.iterators.OptionDescriber;
+import org.apache.accumulo.core.iterators.SortedKeyValueIterator;
 
 import com.google.common.collect.Multimap;
 
@@ -185,9 +169,9 @@ public class BooleanLogicIterator implements SortedKeyValueIterator<Key, Value>,
 
         } catch (ParseException ex) {
             log.error("ParseException in init: " + ex);
-            throw new IllegalArgumentException("Failed to parse query", ex);
+            throw new IOException("Failed to parse query", ex);
         } catch (Exception ex) {
-            throw new IllegalArgumentException("probably had no indexed terms", ex);
+            throw new IOException("probably had no indexed terms", ex);
         }
 
     }