diff --git a/asterixdb/asterix-app/src/test/java/org/apache/asterix/test/common/ResultExtractor.java b/asterixdb/asterix-app/src/test/java/org/apache/asterix/test/common/ResultExtractor.java
index 5e53d54d87..eb708ce662 100644
--- a/asterixdb/asterix-app/src/test/java/org/apache/asterix/test/common/ResultExtractor.java
+++ b/asterixdb/asterix-app/src/test/java/org/apache/asterix/test/common/ResultExtractor.java
@@ -51,7 +51,6 @@ public class ResultExtractor {
         RESULTS("results"),
         REQUEST_ID("requestID"),
         METRICS("metrics"),
-        PROFILE("profile"),
         CLIENT_CONTEXT_ID("clientContextID"),
         SIGNATURE("signature"),
         STATUS("status"),
@@ -86,12 +85,6 @@ public class ResultExtractor {
     private static final Logger LOGGER = LogManager.getLogger();
     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();
 
-    public static ExtractedResult extract(InputStream resultStream, Charset resultCharset, String outputFormat)
-            throws Exception {
-        return extract(resultStream, EnumSet.of(ResultField.RESULTS, ResultField.WARNINGS), resultCharset,
-                outputFormat);
-    }
-
     public static ExtractedResult extract(InputStream resultStream, Charset resultCharset) throws Exception {
         return extract(resultStream, EnumSet.of(ResultField.RESULTS, ResultField.WARNINGS), resultCharset);
     }
@@ -100,10 +93,6 @@ public class ResultExtractor {
         return extract(resultStream, EnumSet.of(ResultField.METRICS), resultCharset).getResult();
     }
 
-    public static InputStream extractProfile(InputStream resultStream, Charset resultCharset) throws Exception {
-        return extract(resultStream, EnumSet.of(ResultField.PROFILE), resultCharset).getResult();
-    }
-
     public static InputStream extractPlans(InputStream resultStream, Charset resultCharset) throws Exception {
         return extract(resultStream, EnumSet.of(ResultField.PLANS), resultCharset).getResult();
     }
@@ -126,25 +115,6 @@ public class ResultExtractor {
 
     private static ExtractedResult extract(InputStream resultStream, EnumSet<ResultField> resultFields,
             Charset resultCharset) throws Exception {
-        return extract(resultStream, resultFields, resultCharset, "jsonl"); //default output format type is jsonl
-    }
-
-    private static ExtractedResult extract(InputStream resultStream, EnumSet<ResultField> resultFields,
-            Charset resultCharset, String fmt) throws Exception {
-
-        if (fmt.equals("json")) {
-            return extract(resultStream, resultFields, resultCharset, "[", ",", "]");
-        }
-
-        if (fmt.equals("jsonl")) {
-            return extract(resultStream, resultFields, resultCharset, "", "", "");
-        }
-
-        throw new AsterixException("Unkown output format for result of test query");
-    }
-
-    private static ExtractedResult extract(InputStream resultStream, EnumSet<ResultField> resultFields,
-            Charset resultCharset, String openMarker, String separator, String closeMarker) throws Exception {
         ExtractedResult extractedResult = new ExtractedResult();
         final String resultStr = IOUtils.toString(resultStream, resultCharset);
         final ObjectNode result = OBJECT_MAPPER.readValue(resultStr, ObjectNode.class);
@@ -183,10 +153,7 @@ public class ResultExtractor {
                     } else {
                         JsonNode[] fields = Iterators.toArray(fieldValue.elements(), JsonNode.class);
                         if (fields.length > 1) {
-                            String sep = openMarker;
                             for (JsonNode f : fields) {
-                                resultBuilder.append(sep);
-                                sep = separator;
                                 if (f.isObject()) {
 
                                     resultBuilder.append(OBJECT_MAPPER.writeValueAsString(f));
@@ -194,14 +161,12 @@ public class ResultExtractor {
                                     resultBuilder.append(f.asText());
                                 }
                             }
-                            resultBuilder.append(closeMarker);
                         }
 
                     }
                     break;
                 case REQUEST_ID:
                 case METRICS:
-                case PROFILE:
                 case CLIENT_CONTEXT_ID:
                 case SIGNATURE:
                 case STATUS: