diff --git a/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/fakes/FakePostOffice.java b/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/fakes/FakePostOffice.java
index 918ff41aa8..aa41a518c0 100644
--- a/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/fakes/FakePostOffice.java
+++ b/tests/unit-tests/src/test/java/org/apache/activemq/artemis/tests/unit/core/server/impl/fakes/FakePostOffice.java
@@ -16,7 +16,6 @@
  */
 package org.apache.activemq.artemis.tests.unit.core.server.impl.fakes;
 
-import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
@@ -31,10 +30,9 @@ import org.apache.activemq.artemis.core.postoffice.RoutingStatus;
 import org.apache.activemq.artemis.core.postoffice.impl.DuplicateIDCacheImpl;
 import org.apache.activemq.artemis.core.server.MessageReference;
 import org.apache.activemq.artemis.core.server.Queue;
+import org.apache.activemq.artemis.core.server.QueueCreator;
 import org.apache.activemq.artemis.core.server.RoutingContext;
-import org.apache.activemq.artemis.core.server.RoutingType;
 import org.apache.activemq.artemis.core.server.ServerMessage;
-import org.apache.activemq.artemis.core.server.impl.AddressInfo;
 import org.apache.activemq.artemis.core.server.impl.MessageReferenceImpl;
 import org.apache.activemq.artemis.core.transaction.Transaction;
 
@@ -51,17 +49,6 @@ public class FakePostOffice implements PostOffice {
       return null;
    }
 
-   @Override
-   public SimpleString getMatchingQueue(SimpleString address, RoutingType routingType) {
-
-      return null;
-   }
-
-   @Override
-   public SimpleString getMatchingQueue(SimpleString address, SimpleString queueName, RoutingType routingType) {
-      return null;
-   }
-
    @Override
    public void start() throws Exception {
 
@@ -72,32 +59,6 @@ public class FakePostOffice implements PostOffice {
 
    }
 
-   @Override
-   public AddressInfo addAddressInfo(AddressInfo addressInfo) {
-      return null;
-   }
-
-   @Override
-   public AddressInfo addOrUpdateAddressInfo(AddressInfo addressInfo) {
-      return null;
-   }
-
-
-   @Override
-   public AddressInfo removeAddressInfo(SimpleString address) {
-      return null;
-   }
-
-   @Override
-   public AddressInfo getAddressInfo(SimpleString addressName) {
-      return null;
-   }
-
-   @Override
-   public List<Queue> listQueuesForAddress(SimpleString address) throws Exception {
-      return null;
-   }
-
    @Override
    public void addBinding(final Binding binding) throws Exception {
 
@@ -179,30 +140,35 @@ public class FakePostOffice implements PostOffice {
 
    @Override
    public RoutingStatus route(ServerMessage message,
-                              Transaction tx,
+                              QueueCreator creator,
+                              RoutingContext context,
                               boolean direct) throws Exception {
       return RoutingStatus.OK;
+
    }
 
    @Override
-   public RoutingStatus route(ServerMessage message,
-                              Transaction tx,
-                              boolean direct,
-                              boolean rejectDuplicates) throws Exception {
+   public RoutingStatus route(ServerMessage message, QueueCreator creator, Transaction tx, boolean direct) throws Exception {
       return RoutingStatus.OK;
    }
 
    @Override
-   public RoutingStatus route(ServerMessage message, RoutingContext context, boolean direct) throws Exception {
-      return null;
+   public RoutingStatus route(ServerMessage message,
+                           QueueCreator creator,
+                           RoutingContext context,
+                           boolean direct,
+                           boolean rejectDuplicates) throws Exception {
+      return RoutingStatus.OK;
+
    }
 
    @Override
    public RoutingStatus route(ServerMessage message,
-                              RoutingContext context,
-                              boolean direct,
-                              boolean rejectDuplicates) throws Exception {
-      return null;
+                     QueueCreator creator,
+                     Transaction tx,
+                     boolean direct,
+                     boolean rejectDuplicates) throws Exception {
+      return RoutingStatus.OK;
    }
 
    @Override
@@ -210,7 +176,7 @@ public class FakePostOffice implements PostOffice {
    }
 
    @Override
-   public RoutingStatus route(ServerMessage message, boolean direct) throws Exception {
+   public RoutingStatus route(ServerMessage message, QueueCreator queueCreator, boolean direct) throws Exception {
       return RoutingStatus.OK;
    }
-}
+}
\ No newline at end of file