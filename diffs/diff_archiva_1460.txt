diff --git a/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java b/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
index 9cd26bd18..72276d449 100644
--- a/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
+++ b/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
@@ -23,10 +23,7 @@
 import java.util.Date;
 import java.util.List;
 
-import org.apache.archiva.indexer.search.RepositorySearch;
-import org.apache.archiva.indexer.search.SearchResultHit;
-import org.apache.archiva.indexer.search.SearchResultLimits;
-import org.apache.archiva.indexer.search.SearchResults;
+import org.apache.archiva.indexer.util.SearchUtil;
 import org.apache.archiva.web.xmlrpc.api.SearchService;
 import org.apache.archiva.web.xmlrpc.api.beans.Artifact;
 import org.apache.archiva.web.xmlrpc.api.beans.Dependency;
@@ -38,10 +35,12 @@
 import org.apache.maven.archiva.database.browsing.BrowsingResults;
 import org.apache.maven.archiva.database.browsing.RepositoryBrowsing;
 import org.apache.maven.archiva.database.constraints.ArtifactsByChecksumConstraint;
+import org.apache.maven.archiva.indexer.search.CrossRepositorySearch;
+import org.apache.maven.archiva.indexer.search.SearchResultHit;
+import org.apache.maven.archiva.indexer.search.SearchResultLimits;
+import org.apache.maven.archiva.indexer.search.SearchResults;
 import org.apache.maven.archiva.model.ArchivaArtifact;
 import org.apache.maven.archiva.model.ArchivaProjectModel;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
 
 /**
  * SearchServiceImpl
@@ -51,9 +50,8 @@
 public class SearchServiceImpl
     implements SearchService
 { 
-    private Logger log = LoggerFactory.getLogger( SearchServiceImpl.class );
-                                                 
-    private RepositorySearch search;
+    
+    private CrossRepositorySearch crossRepoSearch;
     
     private XmlRpcUserRepositories xmlRpcUserRepositories;
     
@@ -61,13 +59,13 @@
     
     private RepositoryBrowsing repoBrowsing;
     
-    public SearchServiceImpl( XmlRpcUserRepositories xmlRpcUserRepositories, ArchivaDAO archivaDAO,
-                              RepositoryBrowsing repoBrowsing, RepositorySearch search )
+    public SearchServiceImpl( XmlRpcUserRepositories xmlRpcUserRepositories, CrossRepositorySearch crossRepoSearch,
+                              ArchivaDAO archivaDAO, RepositoryBrowsing repoBrowsing )
     {
         this.xmlRpcUserRepositories = xmlRpcUserRepositories;
+        this.crossRepoSearch = crossRepoSearch;
         this.archivaDAO = archivaDAO;        
         this.repoBrowsing = repoBrowsing;
-        this.search = search;
     }
     
     /*
@@ -92,45 +90,44 @@ public List<Artifact> quickSearch( String queryString )
         SearchResultLimits limits = new SearchResultLimits( SearchResultLimits.ALL_PAGES );
         SearchResults results = null;
         
-        results = search.search( "", observableRepos, queryString, limits, null );
+        if( SearchUtil.isBytecodeSearch( queryString ) )
+        {
+            results = crossRepoSearch.searchForBytecode( "", observableRepos, SearchUtil.removeBytecodeKeyword( queryString ), limits );
+        }
+        else
+        {
+            results = crossRepoSearch.searchForTerm( "", observableRepos, queryString, limits );
+        }        
         
         List<SearchResultHit> hits = results.getHits();
-        
         for( SearchResultHit hit : hits )
         {   
             ArtifactDAO artifactDAO = archivaDAO.getArtifactDAO(); 
-              
-            List<String> versions = hit.getVersions();
-            if( versions != null )
+            try
             {
-                for( String version : versions )
-                {   
-                    for( String repo : observableRepos )
-                    {
-                        try
-                        {
-                            ArchivaArtifact pomArtifact = artifactDAO.getArtifact( 
-                                  hit.getGroupId(), hit.getArtifactId(), version, null, "pom", repo );
-                            if( pomArtifact != null )
-                            {
-                                Artifact artifact = new Artifact( pomArtifact.getModel().getRepositoryId(), pomArtifact.getGroupId(), pomArtifact.getArtifactId(), pomArtifact.getVersion(),
-                                                                 pomArtifact.getType() );
-                                                                 //pomArtifact.getType(), pomArtifact.getModel().getWhenGathered() );
-                                artifacts.add( artifact );
-                                break;
-                            }
-                        }
-                        catch( ObjectNotFoundException e )
-                        {
-                            log.debug( "Unable to find pom artifact : " + e.getMessage() );
-                        }
-                        catch( ArchivaDatabaseException e )
-                        {
-                            log.debug( "Error occurred while getting pom artifact from database : " + e.getMessage() );
-                        }
-                    }                      
+                ArchivaArtifact pomArtifact = artifactDAO.getArtifact( 
+                           hit.getGroupId(), hit.getArtifactId(), hit.getVersion(), "", "pom" );
+                
+                if( pomArtifact != null )
+                {
+                    Artifact artifact = new Artifact( pomArtifact.getModel().getRepositoryId(), pomArtifact.getGroupId(), pomArtifact.getArtifactId(), pomArtifact.getVersion(),
+                                                      pomArtifact.getType() );
+                                                      //pomArtifact.getType(), pomArtifact.getModel().getWhenGathered() );
+                    artifacts.add( artifact );
+                }
+                else
+                {
+                    continue;
                 }
             }
+            catch ( ObjectNotFoundException e )
+            {
+                continue;
+            }
+            catch ( ArchivaDatabaseException e )
+            {
+                continue;
+            }
         }
         
         return artifacts;
@@ -164,16 +161,16 @@ public List<Artifact> getArtifactByChecksum( String checksum )
     public List<Artifact> getArtifactVersions( String groupId, String artifactId ) 
         throws Exception
     {
-        final List<Artifact> artifacts = new ArrayList<Artifact>();        
-        final List<String> observableRepos = xmlRpcUserRepositories.getObservableRepositories();
+        List<Artifact> artifacts = new ArrayList<Artifact>();        
+        List<String> observableRepos = xmlRpcUserRepositories.getObservableRepositories();
         
-        final BrowsingResults results = repoBrowsing.selectArtifactId( "", observableRepos, groupId, artifactId );
+        BrowsingResults results = repoBrowsing.selectArtifactId( "", observableRepos, groupId, artifactId );
+        ArtifactDAO artifactDAO = archivaDAO.getArtifactDAO();
         
-        for( final String version : results.getVersions() )
+        for( String version : results.getVersions() )
         {
-            final Artifact artifact = new Artifact( "", groupId, artifactId, version, "pom" ); 
-            //ArchivaArtifact pomArtifact = artifactDAO.getArtifact( groupId, artifactId, version, "", "pom",  );
-            //Artifact artifact = new Artifact( "", groupId, artifactId, version, pomArtifact.getType() ); 
+            ArchivaArtifact pomArtifact = artifactDAO.getArtifact( groupId, artifactId, version, "", "pom" );
+            Artifact artifact = new Artifact( "", groupId, artifactId, version, pomArtifact.getType() ); 
                           //pomArtifact.getModel().getWhenGathered() );
             
             artifacts.add( artifact );
@@ -246,4 +243,4 @@ public List<Artifact> getDependees( String groupId, String artifactId, String ve
         
         return artifacts;
     }
-}
+}
\ No newline at end of file