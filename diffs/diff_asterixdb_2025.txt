diff --git a/hyracks/hyracks-api/src/main/java/edu/uci/ics/hyracks/api/rewriter/runtime/SuperActivityOperatorNodePushable.java b/hyracks/hyracks-api/src/main/java/edu/uci/ics/hyracks/api/rewriter/runtime/SuperActivityOperatorNodePushable.java
index 24efc7a245..d9a15516e9 100644
--- a/hyracks/hyracks-api/src/main/java/edu/uci/ics/hyracks/api/rewriter/runtime/SuperActivityOperatorNodePushable.java
+++ b/hyracks/hyracks-api/src/main/java/edu/uci/ics/hyracks/api/rewriter/runtime/SuperActivityOperatorNodePushable.java
@@ -46,6 +46,7 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
     private final int partition;
     private final int nPartitions;
     private int inputArity = 0;
+    private boolean initialized = false;
 
     public SuperActivityOperatorNodePushable(SuperActivity parent, Map<ActivityId, IActivity> startActivities,
             IHyracksTaskContext ctx, IRecordDescriptorProvider recordDescProvider, int partition, int nPartitions) {
@@ -55,19 +56,11 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
         this.recordDescProvider = recordDescProvider;
         this.partition = partition;
         this.nPartitions = nPartitions;
-
-        /**
-         * initialize the writer-relationship for the internal DAG of operator node pushables
-         */
-        try {
-            init();
-        } catch (Exception e) {
-            throw new IllegalStateException(e);
-        }
     }
 
     @Override
     public synchronized void initialize() throws HyracksDataException {
+        init();
         /**
          * initialize operator node pushables in the BFS order
          */
@@ -78,6 +71,10 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
     }
 
     public void init() throws HyracksDataException {
+        if (initialized) {
+            return;
+        }
+
         Map<ActivityId, IOperatorNodePushable> startOperatorNodePushables = new HashMap<ActivityId, IOperatorNodePushable>();
         Queue<Pair<Pair<IActivity, Integer>, Pair<IActivity, Integer>>> childQueue = new LinkedList<Pair<Pair<IActivity, Integer>, Pair<IActivity, Integer>>>();
         List<IConnectorDescriptor> outputConnectors = null;
@@ -109,9 +106,7 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
              */
             if (outputConnectors != null && outputConnectors.size() > 0) {
                 for (IConnectorDescriptor conn : outputConnectors) {
-                    if (conn != null) {
-                        childQueue.add(parent.getConnectorActivityMap().get(conn.getConnectorId()));
-                    }
+                    childQueue.add(parent.getConnectorActivityMap().get(conn.getConnectorId()));
                 }
             }
 
@@ -143,6 +138,8 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
              */
             outputConnectors = parent.getActivityOutputMap().get(destId);
         }
+
+        initialized = true;
     }
 
     @Override
@@ -163,6 +160,11 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
     @Override
     public synchronized void setOutputFrameWriter(int clusterOutputIndex, IFrameWriter writer,
             RecordDescriptor recordDesc) {
+        try {
+            init();
+        } catch (Exception e) {
+            throw new IllegalStateException(e);
+        }
         /**
          * set the right output frame writer
          */
@@ -173,6 +175,12 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
 
     @Override
     public synchronized IFrameWriter getInputFrameWriter(final int index) {
+        try {
+            init();
+        } catch (Exception e) {
+            throw new IllegalStateException(e);
+        }
+
         /**
          * get the right IFrameWriter from the cluster input index
          */
@@ -207,7 +215,7 @@ public class SuperActivityOperatorNodePushable implements IOperatorNodePushable
 
     @Override
     public String getDisplayName() {
-        return "Super Activity " + parent.getActivityMap().values().toString();
+        return "Meta Activity";
     }
 
 }