diff --git a/src/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java b/src/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
index e7f7029b22..d60c2b4334 100644
--- a/src/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
+++ b/src/core/src/main/java/org/apache/accumulo/core/master/thrift/MasterClientService.java
@@ -20,7 +20,7 @@ import java.util.Arrays;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-@SuppressWarnings("all") public class MasterClientService {
+public class MasterClientService {
 
   public interface Iface {
 
@@ -2990,8 +2990,6 @@ import org.slf4j.LoggerFactory;
 
     private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
       try {
-        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
-        __isset_bit_vector = new BitSet(1);
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
         throw new java.io.IOException(te);
@@ -13071,8 +13069,6 @@ import org.slf4j.LoggerFactory;
 
     private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
       try {
-        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
-        __isset_bit_vector = new BitSet(1);
         read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
       } catch (org.apache.thrift.TException te) {
         throw new java.io.IOException(te);