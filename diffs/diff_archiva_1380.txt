diff --git a/archiva-database/src/main/java/org/apache/maven/archiva/database/browsing/DefaultRepositoryBrowsing.java b/archiva-database/src/main/java/org/apache/maven/archiva/database/browsing/DefaultRepositoryBrowsing.java
index 7ce38abf7..83c5727ff 100644
--- a/archiva-database/src/main/java/org/apache/maven/archiva/database/browsing/DefaultRepositoryBrowsing.java
+++ b/archiva-database/src/main/java/org/apache/maven/archiva/database/browsing/DefaultRepositoryBrowsing.java
@@ -25,8 +25,6 @@
 import org.apache.maven.archiva.database.constraints.UniqueArtifactIdConstraint;
 import org.apache.maven.archiva.database.constraints.UniqueGroupIdConstraint;
 import org.apache.maven.archiva.database.constraints.UniqueVersionConstraint;
-import org.apache.maven.archiva.database.updater.DatabaseUpdater;
-import org.apache.maven.archiva.model.ArchivaArtifact;
 import org.apache.maven.archiva.model.ArchivaProjectModel;
 import org.codehaus.plexus.logging.AbstractLogEnabled;
 
@@ -39,21 +37,17 @@
  * @version $Id$
  * 
  * @plexus.component role="org.apache.maven.archiva.database.browsing.RepositoryBrowsing"
+ *                   role-hint="default"
  */
 public class DefaultRepositoryBrowsing
     extends AbstractLogEnabled
     implements RepositoryBrowsing
 {
     /**
-     * @plexus.requirement role-hint="jdo"
+     * @plexus.requirement
      */
     private ArchivaDAO dao;
 
-    /**
-     * @plexus.requirement role-hint="jdo"
-     */
-    private DatabaseUpdater dbUpdater;
-
     public BrowsingResults getRoot()
     {
         List groups = dao.query( new UniqueGroupIdConstraint() );
@@ -75,7 +69,7 @@ public BrowsingResults selectArtifactId( String groupId, String artifactId )
 
         // results.setGroupIds( groups );
         // results.setArtifacts( artifacts );
-        results.setVersions( versions );
+        results.setArtifacts( versions );
 
         return results;
     }
@@ -95,51 +89,10 @@ public BrowsingResults selectGroupId( String groupId )
     public ArchivaProjectModel selectVersion( String groupId, String artifactId, String version )
         throws ObjectNotFoundException, ArchivaDatabaseException
     {
-        ArchivaArtifact pomArtifact = null;
-
-        try
-        {
-            pomArtifact = dao.getArtifactDAO().getArtifact( groupId, artifactId, version, null, "pom" );
-
-            if ( pomArtifact == null )
-            {
-                throw new ObjectNotFoundException( "Unable to find artifact [" + groupId + ":" + artifactId + ":"
-                    + version + "]" );
-            }
-        }
-        catch ( ObjectNotFoundException e )
-        {
-            throw e;
-        }
-        
-        ArchivaProjectModel model;
-
-        if ( pomArtifact.getModel().isProcessed() )
-        {
-            // It's been processed. return it.
-            model = dao.getProjectModelDAO().getProjectModel( groupId, artifactId, version );
-            return model;
-        }
-
-        // Process it.
-        dbUpdater.updateUnprocessed( pomArtifact );
-
-        // Find it.
-        try
-        {
-            model = dao.getProjectModelDAO().getProjectModel( groupId, artifactId, version );
-    
-            if ( model == null )
-            {
-                throw new ObjectNotFoundException( "Unable to find project model for [" + groupId + ":" + artifactId + ":"
-                    + version + "]" );
-            }
-
-            return model;
-        }
-        catch ( ObjectNotFoundException e )
-        {
-            throw e;
-        }
+        ArchivaProjectModel model = dao.getProjectModelDAO().getProjectModel( groupId, artifactId, version );
+
+        // TODO: if the model isn't found. load it from disk, insert into DB, and then return it.
+
+        return model;
     }
 }