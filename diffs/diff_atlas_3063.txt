diff --git a/authorization/src/main/java/org/apache/atlas/authorize/simple/AtlasSimpleAuthorizer.java b/authorization/src/main/java/org/apache/atlas/authorize/simple/AtlasSimpleAuthorizer.java
index 47c44ccc4..fd5885898 100644
--- a/authorization/src/main/java/org/apache/atlas/authorize/simple/AtlasSimpleAuthorizer.java
+++ b/authorization/src/main/java/org/apache/atlas/authorize/simple/AtlasSimpleAuthorizer.java
@@ -31,16 +31,10 @@ import org.apache.atlas.authorize.AtlasAdminAccessRequest;
 import org.apache.atlas.authorize.AtlasAuthorizer;
 import org.apache.atlas.authorize.AtlasAuthorizationException;
 import org.apache.atlas.authorize.AtlasEntityAccessRequest;
-import org.apache.atlas.authorize.AtlasPrivilege;
-import org.apache.atlas.authorize.AtlasSearchResultScrubRequest;
 import org.apache.atlas.authorize.AtlasTypeAccessRequest;
 import org.apache.atlas.authorize.simple.AtlasSimpleAuthzPolicy.*;
-import org.apache.atlas.model.discovery.AtlasSearchResult;
-import org.apache.atlas.model.discovery.AtlasSearchResult.AtlasFullTextResult;
-import org.apache.atlas.model.instance.AtlasEntityHeader;
 import org.apache.atlas.utils.AtlasJson;
 import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -225,38 +219,6 @@ public final class AtlasSimpleAuthorizer implements AtlasAuthorizer {
         return ret;
     }
 
-    @Override
-    public void scrubSearchResults(AtlasSearchResultScrubRequest request) throws AtlasAuthorizationException {
-        if (LOG.isDebugEnabled()) {
-            LOG.debug("==> SimpleAtlasAuthorizer.scrubSearchResults({})", request);
-        }
-
-        final AtlasSearchResult result = request.getSearchResult();
-
-        if (CollectionUtils.isNotEmpty(result.getEntities())) {
-            for (AtlasEntityHeader entity : result.getEntities()) {
-                checkAccessAndScrub(entity, request);
-            }
-        }
-
-        if (CollectionUtils.isNotEmpty(result.getFullTextResult())) {
-            for (AtlasFullTextResult fullTextResult : result.getFullTextResult()) {
-                if (fullTextResult != null) {
-                    checkAccessAndScrub(fullTextResult.getEntity(), request);
-                }
-            }
-        }
-
-        if (MapUtils.isNotEmpty(result.getReferredEntities())) {
-            for (AtlasEntityHeader entity : result.getReferredEntities().values()) {
-                checkAccessAndScrub(entity, request);
-            }
-        }
-
-        if (LOG.isDebugEnabled()) {
-            LOG.debug("<== SimpleAtlasAuthorizer.scrubSearchResults({}): {}", request, result);
-        }
-    }
 
     private Set<String> getRoles(String userName, Set<String> userGroups) {
         Set<String> ret = new HashSet<>();
@@ -379,18 +341,6 @@ public final class AtlasSimpleAuthorizer implements AtlasAuthorizer {
 
         return ret;
     }
-
-    private void checkAccessAndScrub(AtlasEntityHeader entity, AtlasSearchResultScrubRequest request) throws AtlasAuthorizationException {
-        if (entity != null && request != null) {
-            final AtlasEntityAccessRequest entityAccessRequest = new AtlasEntityAccessRequest(request.getTypeRegistry(), AtlasPrivilege.ENTITY_READ, entity, request.getUser(), request.getUserGroups());
-
-            entityAccessRequest.setClientIPAddress(request.getClientIPAddress());
-
-            if (!isAccessAllowed(entityAccessRequest)) {
-                scrubEntityHeader(entity);
-            }
-        }
-    }
 }
 
 