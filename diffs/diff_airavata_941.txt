diff --git a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/appwrapper/HostDescriptionDialog.java b/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/appwrapper/HostDescriptionDialog.java
index e39723798..18e5d35b9 100644
--- a/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/appwrapper/HostDescriptionDialog.java
+++ b/modules/xbaya-gui/src/main/java/org/apache/airavata/xbaya/appwrapper/HostDescriptionDialog.java
@@ -21,36 +21,25 @@
 
 package org.apache.airavata.xbaya.appwrapper;
 
-import java.awt.Color;
-import java.awt.event.ActionEvent;
-import java.awt.event.ActionListener;
-import java.awt.event.KeyAdapter;
-import java.awt.event.KeyEvent;
-import java.util.regex.Pattern;
-
-import javax.swing.BorderFactory;
-import javax.swing.JButton;
-import javax.swing.JCheckBox;
-import javax.swing.JDialog;
-import javax.swing.JLabel;
-
-import org.apache.airavata.common.utils.SwingUtil;
 import org.apache.airavata.commons.gfac.type.HostDescription;
 import org.apache.airavata.registry.api.Registry;
 import org.apache.airavata.registry.api.exception.RegistryException;
 import org.apache.airavata.schemas.gfac.GlobusHostType;
-import org.apache.airavata.schemas.gfac.HostDescriptionType;
 import org.apache.airavata.xbaya.XBayaEngine;
 import org.apache.airavata.xbaya.gui.GridPanel;
+import org.apache.airavata.xbaya.gui.XBayaDialog;
 import org.apache.airavata.xbaya.gui.XBayaLabel;
 import org.apache.airavata.xbaya.gui.XBayaTextField;
-import org.apache.tika.parser.txt.TXTParser;
+
+import javax.swing.*;
+import java.awt.event.ActionEvent;
+import java.util.regex.Pattern;
 
 public class HostDescriptionDialog extends JDialog {
 
-	private static final long serialVersionUID = -2910634296292034085L;
+    private XBayaEngine engine;
 
-	private XBayaEngine engine;
+    private XBayaDialog dialog;
 
     private XBayaTextField hostIdTextField;
 
@@ -62,37 +51,19 @@ public class HostDescriptionDialog extends JDialog {
 
     private HostDescription hostDescription;
 
-    private boolean hostCreated = false;
+    private GlobusHostType globusHostType;
 
-    private Registry registry;
-
-	private JCheckBox chkGobusHost;
-
-	private XBayaLabel globusGateKeeperLabel;
-
-	private XBayaLabel gridFTPLabel;
+    private boolean hostCreated = false;
 
-    private JLabel lblError;
+    private boolean isGlobusHostCreated = false;
 
-    private String hostId;
+    private Registry registry;
 
-    private JButton okButton;
-    
-    private boolean newHost;
-    
-    private HostDescription originalHostDescription;
-    
-    public HostDescriptionDialog(XBayaEngine engine) {
-    	this(engine,true,null);
-    }
-    
     /**
      * @param engine XBaya workflow engine
      */
-    public HostDescriptionDialog(XBayaEngine engine, boolean newHost, HostDescription originalHostDescription) {
+    public HostDescriptionDialog(XBayaEngine engine) {
         this.engine = engine;
-        setNewHost(newHost);
-        setOriginalHostDescription(originalHostDescription);
         setRegistry(engine.getConfiguration().getJcrComponentRegistry().getRegistry());
         initGUI();
     }
@@ -100,52 +71,71 @@ public class HostDescriptionDialog extends JDialog {
     /**
      * Displays the dialog.
      */
-    public void open() {
-		setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
-		setVisible(true);
+    public void show() {
+        this.dialog.show();
     }
 
-    public void close() {
-    	setVisible(false);
+    public void hide() {
+        this.dialog.hide();
     }
 
     private void ok() {
-        hostId = this.hostIdTextField.getText();
+        String hostId = this.hostIdTextField.getText();
         String hostAddress = this.hostAddressTextField.getText();
         String globusGateKeeperEPR = this.globusGateKeeperTextField.getText();
         String gridFTP = this.GridFTPTextField.getText();
 
+        if((globusGateKeeperEPR != null) || (gridFTP != null)){
+            isGlobusHostCreated = true;
+        }
+
+        // TODO the logic here
+
         setHostId(hostId);
         setHostLocation(hostAddress);
-        if(isGlobusHostType()) {
-        	setGlobusGateKeeperEPR(globusGateKeeperEPR);
-        	setGridFTPEPR(gridFTP);
+        if(globusGateKeeperEPR != null) {
+          setGlobusGateKeeperEPR(globusGateKeeperEPR);
+        }
+        if(gridFTP != null) {
+          setGridFTPEPR(globusGateKeeperEPR);
         }
 
         saveHostDescription();
-        close();
+        hide();
     }
 
-	private boolean isGlobusHostType() {
-		return getHostDescription().getType() instanceof GlobusHostType;
-	}
-
     private void setGlobusGateKeeperEPR(String epr) {
-        ((GlobusHostType)hostDescription.getType()).addGlobusGateKeeperEndPoint(epr);
+        if (hostDescription.getType() == GlobusHostType.type) {
+            ((GlobusHostType)hostDescription).addGlobusGateKeeperEndPoint(epr);
+        }
+    }
+
+    private String[] getGlobusGateKeeperEPR(String epr) {
+        if (hostDescription.getType() == GlobusHostType.type) {
+            return ((GlobusHostType)hostDescription).getGlobusGateKeeperEndPointArray();
+        } else {
+            return null;
+        }
     }
 
     private void setGridFTPEPR(String epr) {
-        ((GlobusHostType)hostDescription.getType()).addGridFTPEndPoint(epr);
+        if (hostDescription.getType() == GlobusHostType.type) {
+            ((GlobusHostType)hostDescription).addGridFTPEndPoint(epr);
+        }
+    }
+
+    private String[] getGridFTPEPR(String epr) {
+        if (hostDescription.getType() == GlobusHostType.type) {
+            return ((GlobusHostType)hostDescription).getGridFTPEndPointArray();
+        } else {
+            return null;
+        }
     }
 
     /**
      * Initializes the GUI.
      */
     private void initGUI() {
-    	setBounds(100, 100, 400, 280);
-    	setModal(true);
-        setLocationRelativeTo(null);
-        setTitle("New Host Description");
         this.hostIdTextField = new XBayaTextField();
         this.hostAddressTextField = new XBayaTextField();
         this.globusGateKeeperTextField = new XBayaTextField();
@@ -153,107 +143,42 @@ public class HostDescriptionDialog extends JDialog {
 
         XBayaLabel hostIdLabel = new XBayaLabel("Host ID", this.hostIdTextField);
         XBayaLabel hostAddressLabel = new XBayaLabel("Host Address", this.hostAddressTextField);
-        globusGateKeeperLabel = new XBayaLabel("Globus Gate Keeper Endpoint", this.globusGateKeeperTextField);
-        gridFTPLabel = new XBayaLabel("Grid FTP Endpoint", this.GridFTPTextField);
-        chkGobusHost=new JCheckBox("Define this host as a Globus host");
-        chkGobusHost.addActionListener(new ActionListener(){
-			@Override
-			public void actionPerformed(ActionEvent arg0) {
-				updateGlobusHostTypeAndControls();
-			}
-        });
-        hostIdTextField.getSwingComponent().addKeyListener(new KeyAdapter() {
-            @Override
-            public void keyPressed(KeyEvent e) {
-                try {
-                    validateDialog();
-                    setError(null);
-                } catch (Exception e1) {
-                    setError(e1.getMessage());
-                }
-            }
-        });
-        GridPanel infoPanel1 = new GridPanel();
-        infoPanel1.add(hostIdLabel);
-        infoPanel1.add(this.hostIdTextField);
-        infoPanel1.add(hostAddressLabel);
-        infoPanel1.add(this.hostAddressTextField);
-        infoPanel1.add(chkGobusHost);
-        GridPanel infoPanel2 = new GridPanel();
-        infoPanel2.add(globusGateKeeperLabel);
-        infoPanel2.add(globusGateKeeperTextField);
-        infoPanel2.add(gridFTPLabel);
-        infoPanel2.add(GridFTPTextField);
-        SwingUtil.layoutToGrid(infoPanel1.getSwingComponent(), 2, 2, SwingUtil.WEIGHT_NONE, 1);
-        SwingUtil.layoutToGrid(infoPanel2.getSwingComponent(), 2, 2, SwingUtil.WEIGHT_NONE, 1);
+        XBayaLabel globusGateKeeperLabel = new XBayaLabel("Gloubus Gate Keeper Endpoint", this.globusGateKeeperTextField);
+        XBayaLabel gridFTPLabel = new XBayaLabel("Grid FTP Endpoint", this.GridFTPTextField);
 
         GridPanel infoPanel = new GridPanel();
-
-        infoPanel.add(infoPanel1);
-        infoPanel.add(chkGobusHost);
-        infoPanel.add(infoPanel2);
-        infoPanel.getSwingComponent().setBorder(BorderFactory.createEtchedBorder());
-        SwingUtil.layoutToGrid(infoPanel.getSwingComponent(), 3, 1, SwingUtil.WEIGHT_NONE, 0);
-
-        GridPanel buttonPanel = new GridPanel();
-        lblError = new JLabel();
-        lblError.setForeground(Color.RED);
-        buttonPanel.add(lblError);
-        okButton = new JButton("OK");
-        okButton.addActionListener(new ActionListener() {
+        infoPanel.add(hostIdLabel);
+        infoPanel.add(this.hostIdTextField);
+        infoPanel.add(hostAddressLabel);
+        infoPanel.add(this.hostAddressTextField);
+        infoPanel.add(globusGateKeeperLabel);
+        infoPanel.add(globusGateKeeperTextField);
+        infoPanel.add(gridFTPLabel);
+        infoPanel.add(this.GridFTPTextField);
+        infoPanel.layout(4, 2, GridPanel.WEIGHT_NONE, 1);
+
+        JButton okButton = new JButton("OK");
+        okButton.addActionListener(new AbstractAction() {
             public void actionPerformed(ActionEvent e) {
                 ok();
             }
         });
 
-        buttonPanel.add(okButton);
-
         JButton cancelButton = new JButton("Cancel");
-        cancelButton.addActionListener(new ActionListener() {
+        cancelButton.addActionListener(new AbstractAction() {
             public void actionPerformed(ActionEvent e) {
-                close();
+                hide();
             }
         });
-        
+
+        JPanel buttonPanel = new JPanel();
+        buttonPanel.add(okButton);
         buttonPanel.add(cancelButton);
-        buttonPanel.layout(1,3,SwingUtil.WEIGHT_NONE,0);
-        buttonPanel.getSwingComponent().setBorder(BorderFactory.createEtchedBorder());
-        
-        getContentPane().add(infoPanel.getSwingComponent());
-        getContentPane().add(buttonPanel.getSwingComponent());
-        
-        SwingUtil.layoutToGrid(getContentPane(), 2, 1, 0, 0);
-        
-        getRootPane().setDefaultButton(okButton);
-        chkGobusHost.setSelected(false);
-        updateGlobusHostTypeAndControls();
-        if (!isNewHost()) {
-			loadData();
-		}
+
+        this.dialog = new XBayaDialog(this.engine, "New Host Description", infoPanel, buttonPanel);
+        this.dialog.setDefaultButton(okButton);
     }
 
-    private String arrayToString(String[] list) {
-    	String result="";
-		for (String s : list) {
-			if (result.equals("")){
-				result=s;
-			}else{
-				result+=","+s;
-			}
-		}
-		return result;
-	}
-    private void loadData() {
-    	HostDescriptionType t = getOriginalHostDescription().getType();
-    	hostIdTextField.setText(t.getHostName());
-		hostAddressTextField.setText(t.getHostAddress());
-		if (t instanceof GlobusHostType){
-			globusGateKeeperTextField.setText(arrayToString(((GlobusHostType) t).getGlobusGateKeeperEndPointArray()));
-			GridFTPTextField.setText(arrayToString(((GlobusHostType) t).getGridFTPEndPointArray()));
-		}
-		hostIdTextField.setEditable(isNewHost());
-	}
-    
     public String getHostId() {
         return getHostDescription().getType().getHostName();
     }
@@ -264,7 +189,7 @@ public class HostDescriptionDialog extends JDialog {
     }
 
     public String getHostLocation() {
-        return getHostDescription().getType().getHostName();
+        return getHostDescription().getType().getHostAddress();
     }
 
     public void setHostLocation(String hostLocation) {
@@ -299,18 +224,13 @@ public class HostDescriptionDialog extends JDialog {
         } catch (Exception e) {
             message = e.getLocalizedMessage();
         }
-        okButton.setEnabled(message == null);
-        setError(message);
+        //okButton.setEnabled(message == null);
+        //setError(message);
     }
 
-    private void setError(String errorMessage) {
-        if (errorMessage == null || errorMessage.trim().equals("")) {
-            lblError.setText("");
-        } else {
-            lblError.setText(errorMessage.trim());
-        }
-
-    }
+/*    public void close() {
+        getDialog().setVisible(false);
+    }*/
 
     public boolean isHostCreated() {
         return hostCreated;
@@ -322,17 +242,28 @@ public class HostDescriptionDialog extends JDialog {
 
     public HostDescription getHostDescription() {
         if (hostDescription == null) {
-            hostDescription = new HostDescription(GlobusHostType.type);
+            if (isGlobusHostCreated) {
+                hostDescription = new HostDescription(GlobusHostType.type);
+            } else {
+                hostDescription = new HostDescription();
+            }
         }
         return hostDescription;
     }
 
     public void saveHostDescription() {
-        HostDescription desc = getHostDescription();
-		getRegistry().saveHostDescription(desc);
+        getRegistry().saveHostDescription(getHostDescription());
         setHostCreated(true);
     }
 
+/*    private void setError(String errorMessage) {
+        if (errorMessage == null || errorMessage.trim().equals("")) {
+            lblError.setText("");
+        } else {
+            lblError.setText(errorMessage.trim());
+        }
+    }*/
+
     public Registry getRegistry() {
         return registry;
     }
@@ -340,32 +271,4 @@ public class HostDescriptionDialog extends JDialog {
     public void setRegistry(Registry registry) {
         this.registry = registry;
     }
-
-	private void updateGlobusHostTypeAndControls() {
-		if(chkGobusHost.isSelected()) {
-			getHostDescription().getType().changeType(GlobusHostType.type);
-		}else{
-			getHostDescription().getType().changeType(HostDescriptionType.type);
-		}
-		globusGateKeeperLabel.getSwingComponent().setEnabled(isGlobusHostType());
-		globusGateKeeperTextField.setEnabled(isGlobusHostType());
-		gridFTPLabel.getSwingComponent().setEnabled(isGlobusHostType());
-		GridFTPTextField.setEnabled(isGlobusHostType());
-	}
-
-	public boolean isNewHost() {
-		return newHost;
-	}
-
-	public void setNewHost(boolean newHost) {
-		this.newHost = newHost;
-	}
-
-	public HostDescription getOriginalHostDescription() {
-		return originalHostDescription;
-	}
-
-	public void setOriginalHostDescription(HostDescription originalHostDescription) {
-		this.originalHostDescription = originalHostDescription;
-	}
 }
\ No newline at end of file