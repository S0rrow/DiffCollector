diff --git a/src/main/java/org/apache/geronimo/blueprint/namespace/NamespaceHandlerRegistryImpl.java b/src/main/java/org/apache/geronimo/blueprint/namespace/NamespaceHandlerRegistryImpl.java
index 841652def..bc206e814 100644
--- a/src/main/java/org/apache/geronimo/blueprint/namespace/NamespaceHandlerRegistryImpl.java
+++ b/src/main/java/org/apache/geronimo/blueprint/namespace/NamespaceHandlerRegistryImpl.java
@@ -19,13 +19,16 @@
 package org.apache.geronimo.blueprint.namespace;
 
 import java.net.URI;
-import java.util.ArrayList;
-import java.util.Arrays;
+import java.util.HashMap;
+import java.util.Map;
 import java.util.Collection;
+import java.util.Set;
+import java.util.HashSet;
 import java.util.Collections;
-import java.util.HashMap;
+import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
-import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.apache.geronimo.blueprint.NamespaceHandlerRegistry;
 import org.osgi.framework.BundleContext;
@@ -33,8 +36,8 @@ import org.osgi.framework.ServiceReference;
 import org.osgi.service.blueprint.namespace.NamespaceHandler;
 import org.osgi.util.tracker.ServiceTracker;
 import org.osgi.util.tracker.ServiceTrackerCustomizer;
-import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.slf4j.Logger;
 
 /**
  * Default implementation of the NamespaceHandlerRegistry.
@@ -100,9 +103,15 @@ public class NamespaceHandlerRegistryImpl implements NamespaceHandlerRegistry, S
         for (URI uri : namespaces) {
             if (handlers.containsKey(uri)) {
                 LOGGER.warn("Ignoring NamespaceHandler for namespace {}, as another handler has already been registered for the same namespace", uri);
-            } else {
-                handlers.put(uri, handler);
-                callListeners(uri, true);
+                continue;
+            }
+            handlers.put(uri, handler);
+            for (Listener listener : listeners.keySet()) {
+                try {
+                    listener.namespaceHandlerRegistered(uri);
+                } catch (Throwable t) {
+                    LOGGER.debug("Unexpected exception when notifying a NamespaceHandler listener", t);
+                }
             }
         }
     }
@@ -114,20 +123,12 @@ public class NamespaceHandlerRegistryImpl implements NamespaceHandlerRegistry, S
                 continue;
             }
             handlers.remove(uri);
-            callListeners(uri, false);
-        }
-    }
-
-    private void callListeners(URI uri, boolean registered) {
-        for (Listener listener : listeners.keySet()) {
-            try {
-                if (registered) {
-                    listener.namespaceHandlerRegistered(uri);
-                } else {
+            for (Listener listener : listeners.keySet()) {
+                try {
                     listener.namespaceHandlerUnregistered(uri);
+                } catch (Throwable t) {
+                    LOGGER.debug("Unexpected exception when notifying a NamespaceHandler listener", t);
                 }
-            } catch (Throwable t) {
-                LOGGER.debug("Unexpected exception when notifying a NamespaceHandler listener", t);
             }
         }
     }
@@ -143,8 +144,8 @@ public class NamespaceHandlerRegistryImpl implements NamespaceHandlerRegistry, S
         } else if (ns instanceof String[]) {
             String[] strings = (String[]) ns;
             List<URI> namespaces = new ArrayList<URI>(strings.length);
-            for (String string : strings) {
-                namespaces.add(URI.create(string));
+            for (int i = 0; i < strings.length; i++) {
+                namespaces.add(URI.create(strings[i]));
             }
             return namespaces;
         } else if (ns instanceof Collection) {