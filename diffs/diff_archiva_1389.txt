diff --git a/archiva-base/archiva-configuration/src/main/java/org/apache/maven/archiva/configuration/DefaultArchivaConfiguration.java b/archiva-base/archiva-configuration/src/main/java/org/apache/maven/archiva/configuration/DefaultArchivaConfiguration.java
index 376fac46d..82ff2069b 100644
--- a/archiva-base/archiva-configuration/src/main/java/org/apache/maven/archiva/configuration/DefaultArchivaConfiguration.java
+++ b/archiva-base/archiva-configuration/src/main/java/org/apache/maven/archiva/configuration/DefaultArchivaConfiguration.java
@@ -95,9 +95,10 @@ public synchronized Configuration getConfiguration()
         if ( configuration == null )
         {
             configuration = load();
-            configuration = processExpressions( configuration );
         }
 
+        configuration = processExpressions( configuration );
+
         return configuration;
     }
 
@@ -177,23 +178,12 @@ else if ( baseSection != null )
             }
         }
 
-        // escape all cron expressions to handle ','
-        for ( Iterator i = configuration.getRepositories().iterator(); i.hasNext(); )
-        {
-            RepositoryConfiguration c = (RepositoryConfiguration) i.next();
-            c.setRefreshCronExpression( escapeCronExpression( c.getRefreshCronExpression() ) );
-        }
-
-        if ( configuration.getDatabaseScanning() != null )
-        {
-            configuration.getDatabaseScanning().setCronExpression( escapeCronExpression(
-                configuration.getDatabaseScanning().getCronExpression() ) );
-        }
+        configuration = escapeCronExpressions( configuration );
 
         new ConfigurationRegistryWriter().write( configuration, section );
         section.save();
 
-        this.configuration = processExpressions( configuration );
+        this.configuration = configuration;
     }
 
     private Registry createDefaultConfigurationFile()
@@ -305,4 +295,24 @@ private Configuration processExpressions( Configuration config )
 
         return config;
     }
+
+    private Configuration escapeCronExpressions( Configuration config )
+    {
+        for ( Iterator i = config.getRepositories().iterator(); i.hasNext(); )
+        {
+            RepositoryConfiguration c = (RepositoryConfiguration) i.next();
+
+            c.setRefreshCronExpression( escapeCronExpression( c.getRefreshCronExpression() ) );
+        }
+
+        DatabaseScanningConfiguration databaseScanning = config.getDatabaseScanning();
+        if ( databaseScanning != null )
+        {
+            String cron = databaseScanning.getCronExpression();
+            databaseScanning.setCronExpression( escapeCronExpression( cron ) );
+        }
+
+        return config;
+    }
+
 }