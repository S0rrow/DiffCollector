diff --git a/asterixdb/asterix-lang-sqlpp/src/main/java/org/apache/asterix/lang/sqlpp/rewrites/visitor/SetOperationVisitor.java b/asterixdb/asterix-lang-sqlpp/src/main/java/org/apache/asterix/lang/sqlpp/rewrites/visitor/SetOperationVisitor.java
index fe86cfc1e4..66bfecd222 100644
--- a/asterixdb/asterix-lang-sqlpp/src/main/java/org/apache/asterix/lang/sqlpp/rewrites/visitor/SetOperationVisitor.java
+++ b/asterixdb/asterix-lang-sqlpp/src/main/java/org/apache/asterix/lang/sqlpp/rewrites/visitor/SetOperationVisitor.java
@@ -22,7 +22,7 @@ package org.apache.asterix.lang.sqlpp.rewrites.visitor;
 import java.util.ArrayList;
 import java.util.Collections;
 
-import org.apache.asterix.common.exceptions.CompilationException;
+import org.apache.asterix.common.exceptions.AsterixException;
 import org.apache.asterix.lang.common.base.Expression;
 import org.apache.asterix.lang.common.base.ILangExpression;
 import org.apache.asterix.lang.common.clause.LimitClause;
@@ -38,7 +38,6 @@ import org.apache.asterix.lang.sqlpp.clause.SelectSetOperation;
 import org.apache.asterix.lang.sqlpp.expression.SelectExpression;
 import org.apache.asterix.lang.sqlpp.struct.SetOperationInput;
 import org.apache.asterix.lang.sqlpp.visitor.base.AbstractSqlppExpressionScopingVisitor;
-import org.apache.hyracks.api.exceptions.SourceLocation;
 
 /**
  * This visitor rewrites set operation queries with order by and limit into
@@ -73,7 +72,7 @@ public class SetOperationVisitor extends AbstractSqlppExpressionScopingVisitor {
     }
 
     @Override
-    public Expression visit(SelectExpression selectExpression, ILangExpression arg) throws CompilationException {
+    public Expression visit(SelectExpression selectExpression, ILangExpression arg) throws AsterixException {
         // Recursively visit nested select expressions.
         SelectSetOperation selectSetOperation = selectExpression.getSelectSetOperation();
         if (!selectSetOperation.hasRightInputs() || !(selectExpression.hasOrderby() || selectExpression.hasLimit())) {
@@ -82,34 +81,20 @@ public class SetOperationVisitor extends AbstractSqlppExpressionScopingVisitor {
         OrderbyClause orderBy = selectExpression.getOrderbyClause();
         LimitClause limit = selectExpression.getLimitClause();
 
-        SourceLocation sourceLoc = selectExpression.getSourceLocation();
-
         // Wraps the set operation part with a subquery.
         SelectExpression nestedSelectExpression = new SelectExpression(null, selectSetOperation, null, null, true);
-        nestedSelectExpression.setSourceLocation(sourceLoc);
-        SelectBlock selectBlock = createSelectBlock(nestedSelectExpression, context);
+        VariableExpr newBindingVar = new VariableExpr(context.newVariable()); // Binding variable for the subquery.
+        FromTerm newFromTerm = new FromTerm(nestedSelectExpression, newBindingVar, null, null);
+        FromClause newFromClause = new FromClause(new ArrayList<>(Collections.singletonList(newFromTerm)));
+        SelectClause selectClause = new SelectClause(new SelectElement(newBindingVar), null, false);
+        SelectBlock selectBlock = new SelectBlock(selectClause, newFromClause, null, null, null, null, null);
         SelectSetOperation newSelectSetOperation =
                 new SelectSetOperation(new SetOperationInput(selectBlock, null), null);
-        newSelectSetOperation.setSourceLocation(sourceLoc);
+
         // Puts together the generated select-from-where query and order by/limit.
         SelectExpression newSelectExpression = new SelectExpression(selectExpression.getLetList(),
                 newSelectSetOperation, orderBy, limit, selectExpression.isSubquery());
-        newSelectExpression.setSourceLocation(sourceLoc);
         return super.visit(newSelectExpression, arg);
     }
 
-    static SelectBlock createSelectBlock(Expression inputExpr, LangRewritingContext context) {
-        SourceLocation sourceLoc = inputExpr.getSourceLocation();
-        VariableExpr newBindingVar = new VariableExpr(context.newVariable()); // Binding variable for the subquery.
-        newBindingVar.setSourceLocation(sourceLoc);
-        FromTerm newFromTerm = new FromTerm(inputExpr, newBindingVar, null, null);
-        newFromTerm.setSourceLocation(sourceLoc);
-        FromClause newFromClause = new FromClause(new ArrayList<>(Collections.singletonList(newFromTerm)));
-        newFromClause.setSourceLocation(sourceLoc);
-        SelectClause selectClause = new SelectClause(new SelectElement(newBindingVar), null, false);
-        selectClause.setSourceLocation(sourceLoc);
-        SelectBlock selectBlock = new SelectBlock(selectClause, newFromClause, null, null, null);
-        selectBlock.setSourceLocation(sourceLoc);
-        return selectBlock;
-    }
 }