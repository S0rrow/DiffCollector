diff --git a/repository/src/main/java/org/apache/atlas/repository/graph/FullTextMapper.java b/repository/src/main/java/org/apache/atlas/repository/graph/FullTextMapper.java
index 053e8acbf..b342e2700 100644
--- a/repository/src/main/java/org/apache/atlas/repository/graph/FullTextMapper.java
+++ b/repository/src/main/java/org/apache/atlas/repository/graph/FullTextMapper.java
@@ -17,7 +17,7 @@
  */
 package org.apache.atlas.repository.graph;
 
-import org.apache.atlas.repository.graphdb.AtlasVertex;
+import com.tinkerpop.blueprints.Vertex;
 import org.apache.atlas.AtlasException;
 import org.apache.atlas.typesystem.ITypedInstance;
 import org.apache.atlas.typesystem.ITypedReferenceableInstance;
@@ -49,7 +49,7 @@ public class FullTextMapper {
         instanceCache = new HashMap<>();
     }
 
-    public String mapRecursive(AtlasVertex instanceVertex, boolean followReferences) throws AtlasException {
+    public String mapRecursive(Vertex instanceVertex, boolean followReferences) throws AtlasException {
         String guid = GraphHelper.getIdFromVertex(instanceVertex);
         ITypedReferenceableInstance typedReference;
         if (instanceCache.containsKey(guid)) {
@@ -121,7 +121,7 @@ public class FullTextMapper {
         case CLASS:
             if (followReferences) {
                 String refGuid = ((ITypedReferenceableInstance) value).getId()._getId();
-                AtlasVertex refVertex = graphHelper.getVertexForGUID(refGuid);
+                Vertex refVertex = graphHelper.getVertexForGUID(refGuid);
                 return mapRecursive(refVertex, false);
             }
             break;