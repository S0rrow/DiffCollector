diff --git a/server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java b/server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java
index f474dc354f..eb8095f25e 100644
--- a/server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java
+++ b/server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java
@@ -16,8 +16,6 @@
  */
 package org.apache.accumulo.server.rpc;
 
-import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
-
 import java.io.IOException;
 import java.lang.reflect.Field;
 import java.net.BindException;
@@ -53,7 +51,6 @@ import org.apache.thrift.TProcessorFactory;
 import org.apache.thrift.protocol.TProtocolFactory;
 import org.apache.thrift.server.TServer;
 import org.apache.thrift.server.TThreadPoolServer;
-import org.apache.thrift.transport.TNonblockingServerSocket;
 import org.apache.thrift.transport.TSSLTransportFactory;
 import org.apache.thrift.transport.TSaslServerTransport;
 import org.apache.thrift.transport.TServerSocket;
@@ -65,6 +62,7 @@ import org.slf4j.LoggerFactory;
 
 import com.google.common.base.Preconditions;
 import com.google.common.net.HostAndPort;
+import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
 
 /**
  * Factory methods for creating Thrift server objects
@@ -395,7 +393,6 @@ public class TServerUtils {
       hostname = InetAddress.getByName(address.getHostText()).getCanonicalHostName();
       fqdn = InetAddress.getLocalHost().getCanonicalHostName();
     } catch (UnknownHostException e) {
-      transport.close();
       throw new TTransportException(e);
     }
 
@@ -411,7 +408,6 @@ public class TServerUtils {
       log.error(
           "Expected hostname of '{}' but got '{}'. Ensure the entries in the Accumulo hosts files (e.g. masters, slaves) are the FQDN for each host when using SASL.",
           fqdn, hostname);
-      transport.close();
       throw new RuntimeException("SASL requires that the address the thrift server listens on is the same as the FQDN for this host");
     }
 
@@ -419,7 +415,6 @@ public class TServerUtils {
     try {
       serverUser = UserGroupInformation.getLoginUser();
     } catch (IOException e) {
-      transport.close();
       throw new TTransportException(e);
     }
 