diff --git a/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java b/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
index 72276d449..407412466 100644
--- a/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
+++ b/archiva-modules/archiva-web/archiva-xmlrpc/archiva-xmlrpc-services/src/main/java/org/apache/archiva/web/xmlrpc/services/SearchServiceImpl.java
@@ -26,12 +26,9 @@
 import org.apache.archiva.indexer.util.SearchUtil;
 import org.apache.archiva.web.xmlrpc.api.SearchService;
 import org.apache.archiva.web.xmlrpc.api.beans.Artifact;
-import org.apache.archiva.web.xmlrpc.api.beans.Dependency;
 import org.apache.archiva.web.xmlrpc.security.XmlRpcUserRepositories;
 import org.apache.maven.archiva.database.ArchivaDAO;
-import org.apache.maven.archiva.database.ArchivaDatabaseException;
 import org.apache.maven.archiva.database.ArtifactDAO;
-import org.apache.maven.archiva.database.ObjectNotFoundException;
 import org.apache.maven.archiva.database.browsing.BrowsingResults;
 import org.apache.maven.archiva.database.browsing.RepositoryBrowsing;
 import org.apache.maven.archiva.database.constraints.ArtifactsByChecksumConstraint;
@@ -40,7 +37,6 @@
 import org.apache.maven.archiva.indexer.search.SearchResultLimits;
 import org.apache.maven.archiva.indexer.search.SearchResults;
 import org.apache.maven.archiva.model.ArchivaArtifact;
-import org.apache.maven.archiva.model.ArchivaProjectModel;
 
 /**
  * SearchServiceImpl
@@ -103,28 +99,16 @@ public List<Artifact> quickSearch( String queryString )
         for( SearchResultHit hit : hits )
         {   
             ArtifactDAO artifactDAO = archivaDAO.getArtifactDAO(); 
-            try
-            {
-                ArchivaArtifact pomArtifact = artifactDAO.getArtifact( 
-                           hit.getGroupId(), hit.getArtifactId(), hit.getVersion(), "", "pom" );
-                
-                if( pomArtifact != null )
-                {
-                    Artifact artifact = new Artifact( pomArtifact.getModel().getRepositoryId(), pomArtifact.getGroupId(), pomArtifact.getArtifactId(), pomArtifact.getVersion(),
-                                                      pomArtifact.getType() );
-                                                      //pomArtifact.getType(), pomArtifact.getModel().getWhenGathered() );
-                    artifacts.add( artifact );
-                }
-                else
-                {
-                    continue;
-                }
-            }
-            catch ( ObjectNotFoundException e )
+            ArchivaArtifact pomArtifact = artifactDAO.getArtifact( 
+                       hit.getGroupId(), hit.getArtifactId(), hit.getVersion(), "", "pom" );
+            
+            if( pomArtifact != null )
             {
-                continue;
+                Artifact artifact = new Artifact( pomArtifact.getModel().getRepositoryId(), pomArtifact.getGroupId(), pomArtifact.getArtifactId(), pomArtifact.getVersion(),
+                                                  pomArtifact.getType(), pomArtifact.getModel().getWhenGathered() );
+                artifacts.add( artifact );
             }
-            catch ( ArchivaDatabaseException e )
+            else
             {
                 continue;
             }
@@ -150,8 +134,8 @@ public List<Artifact> getArtifactByChecksum( String checksum )
         for( ArchivaArtifact archivaArtifact : artifacts )
         {
             Artifact artifact = new Artifact( archivaArtifact.getModel().getRepositoryId(), archivaArtifact.getModel().getGroupId(),
-                          archivaArtifact.getModel().getArtifactId(), archivaArtifact.getModel().getVersion(), archivaArtifact.getType() ); 
-                          //archivaArtifact.getModel().getWhenGathered() );
+                          archivaArtifact.getModel().getArtifactId(), archivaArtifact.getModel().getVersion(), archivaArtifact.getType(), 
+                          archivaArtifact.getModel().getWhenGathered() );
             results.add( artifact );
         }
         
@@ -170,8 +154,8 @@ public List<Artifact> getArtifactVersions( String groupId, String artifactId )
         for( String version : results.getVersions() )
         {
             ArchivaArtifact pomArtifact = artifactDAO.getArtifact( groupId, artifactId, version, "", "pom" );
-            Artifact artifact = new Artifact( "", groupId, artifactId, version, pomArtifact.getType() ); 
-                          //pomArtifact.getModel().getWhenGathered() );
+            Artifact artifact = new Artifact( "", groupId, artifactId, version, pomArtifact.getType(), 
+                          pomArtifact.getModel().getWhenGathered() );
             
             artifacts.add( artifact );
         }
@@ -192,36 +176,19 @@ public List<Artifact> getArtifactVersionsByDate( String groupId, String artifact
         return artifacts;
     }
     
-    public List<Dependency> getDependencies( String groupId, String artifactId, String version ) 
+    public List<Artifact> getDirectDependencies( String repositoryId, String groupId, String artifactId, String version ) 
         throws Exception
     {  
-        List<Dependency> dependencies = new ArrayList<Dependency>();        
-        List<String> observableRepos = xmlRpcUserRepositories.getObservableRepositories();
-        
-        try
-        {
-            ArchivaProjectModel model = repoBrowsing.selectVersion( "", observableRepos, groupId, artifactId, version );
-            List<org.apache.maven.archiva.model.Dependency> modelDeps = model.getDependencies();
-            for( org.apache.maven.archiva.model.Dependency dep : modelDeps )
-            {
-                Dependency dependency = new Dependency( 
-                    dep.getGroupId(), dep.getArtifactId(), dep.getVersion(), dep.getClassifier(), dep.getType(), dep.getScope() );
-                dependencies.add( dependency );
-            }
-        }
-        catch ( ObjectNotFoundException oe )
-        {
-            throw new Exception( "Artifact does not exist." );
-        }
+        List<Artifact> artifacts = new ArrayList<Artifact>();
         
-        return dependencies;
+        return artifacts;
     }
     
     public List<Artifact> getDependencyTree( String groupId, String artifactId, String version ) 
         throws Exception
     {
         List<Artifact> a = new ArrayList<Artifact>();
-        
+    
         return a;
     }
     
@@ -230,17 +197,9 @@ public List<Artifact> getDependees( String groupId, String artifactId, String ve
         throws Exception
     {
         List<Artifact> artifacts = new ArrayList<Artifact>();
-        List<String> observableRepos = xmlRpcUserRepositories.getObservableRepositories();
-        
-        List<ArchivaProjectModel> dependees = repoBrowsing.getUsedBy( "", observableRepos, "org.apache.archiva", "archiva-test", "1.0" );
-        for( ArchivaProjectModel model : dependees )
-        {
-            Artifact artifact =
-                new Artifact( "", model.getGroupId(), model.getArtifactId(), model.getVersion(), "" );
-                              //model.getWhenIndexed() );
-            artifacts.add( artifact );
-        }
-        
+       
+        // repo browsing usedBy?
+       
         return artifacts;
     }
 }
\ No newline at end of file