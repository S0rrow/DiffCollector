diff --git a/intg/src/main/java/org/apache/atlas/model/instance/EntityMutationResponse.java b/intg/src/main/java/org/apache/atlas/model/instance/EntityMutationResponse.java
index 74acfdce7..a6c75ed8b 100644
--- a/intg/src/main/java/org/apache/atlas/model/instance/EntityMutationResponse.java
+++ b/intg/src/main/java/org/apache/atlas/model/instance/EntityMutationResponse.java
@@ -18,24 +18,24 @@
 package org.apache.atlas.model.instance;
 
 
-import static org.codehaus.jackson.annotate.JsonAutoDetect.Visibility.NONE;
-import static org.codehaus.jackson.annotate.JsonAutoDetect.Visibility.PUBLIC_ONLY;
+import org.apache.atlas.model.instance.AtlasEntityHeader;
+import org.apache.commons.collections.CollectionUtils;
+import org.apache.commons.collections.MapUtils;
+import org.codehaus.jackson.annotate.JsonAutoDetect;
+import org.codehaus.jackson.annotate.JsonIgnoreProperties;
+import org.codehaus.jackson.map.annotate.JsonSerialize;
 
+import javax.xml.bind.annotation.XmlAccessType;
+import javax.xml.bind.annotation.XmlAccessorType;
+import javax.xml.bind.annotation.XmlRootElement;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Objects;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlRootElement;
 
-import org.apache.atlas.model.typedef.AtlasBaseTypeDef;
-import org.codehaus.jackson.annotate.JsonAutoDetect;
-import org.codehaus.jackson.annotate.JsonIgnore;
-import org.codehaus.jackson.annotate.JsonIgnoreProperties;
-import org.codehaus.jackson.map.annotate.JsonSerialize;
+import static org.codehaus.jackson.annotate.JsonAutoDetect.Visibility.NONE;
+import static org.codehaus.jackson.annotate.JsonAutoDetect.Visibility.PUBLIC_ONLY;
 
 @JsonAutoDetect(getterVisibility=PUBLIC_ONLY, setterVisibility=PUBLIC_ONLY, fieldVisibility=NONE)
 @JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
@@ -44,8 +44,7 @@ import org.codehaus.jackson.map.annotate.JsonSerialize;
 @XmlAccessorType(XmlAccessType.PROPERTY)
 public class EntityMutationResponse {
 
-    Map<EntityMutations.EntityOperation, List<AtlasEntityHeader>> entitiesMutated;
-    Map<String,String> guidAssignments;
+    Map<EntityMutations.EntityOperation, List<AtlasEntityHeader>> entitiesMutated = new HashMap<>();
 
     public EntityMutationResponse() {
     }
@@ -54,7 +53,7 @@ public class EntityMutationResponse {
         this.entitiesMutated = opVsEntityMap;
     }
 
-    public Map<EntityMutations.EntityOperation, List<AtlasEntityHeader>> getMutatedEntities() {
+    public Map<EntityMutations.EntityOperation, List<AtlasEntityHeader>> getEntitiesMutated() {
         return entitiesMutated;
     }
 
@@ -62,107 +61,22 @@ public class EntityMutationResponse {
         this.entitiesMutated = opVsEntityMap;
     }
 
-    public List<AtlasEntityHeader> getEntitiesByOperation(EntityMutations.EntityOperation op) {
+    List<AtlasEntityHeader> getEntitiesByOperation(EntityMutations.EntityOperation op) {
         if ( entitiesMutated != null) {
             return entitiesMutated.get(op);
         }
         return null;
     }
 
-    public List<AtlasEntityHeader> getCreatedEntities() {
-        if ( entitiesMutated != null) {
-            return entitiesMutated.get(EntityMutations.EntityOperation.CREATE);
-        }
-        return null;
-    }
-
-    public List<AtlasEntityHeader> getUpdatedEntities() {
-        if ( entitiesMutated != null) {
-            return entitiesMutated.get(EntityMutations.EntityOperation.UPDATE);
-        }
-        return null;
-    }
-
-    public List<AtlasEntityHeader> getDeletedEntities() {
-        if ( entitiesMutated != null) {
-            return entitiesMutated.get(EntityMutations.EntityOperation.DELETE);
-        }
-        return null;
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getFirstEntityCreated() {
-        final List<AtlasEntityHeader> entitiesByOperation = getEntitiesByOperation(EntityMutations.EntityOperation.CREATE);
-        if ( entitiesByOperation != null && entitiesByOperation.size() > 0) {
-            return entitiesByOperation.get(0);
-        }
-
-        return null;
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getFirstEntityUpdated() {
-        final List<AtlasEntityHeader> entitiesByOperation = getEntitiesByOperation(EntityMutations.EntityOperation.UPDATE);
-        if ( entitiesByOperation != null && entitiesByOperation.size() > 0) {
-            return entitiesByOperation.get(0);
-        }
-
-        return null;
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getFirstCreatedEntityByTypeName(String typeName) {
-        return getFirstEntityByType(getEntitiesByOperation(EntityMutations.EntityOperation.CREATE), typeName);
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getFirstDeletedEntityByTypeName(String typeName) {
-        return getFirstEntityByType(getEntitiesByOperation(EntityMutations.EntityOperation.DELETE), typeName);
-    }
-
-    @JsonIgnore
-    public List<AtlasEntityHeader> getCreatedEntitiesByTypeName(String typeName) {
-        return getEntitiesByType(getEntitiesByOperation(EntityMutations.EntityOperation.CREATE), typeName);
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getCreatedEntityByTypeNameAndAttribute(String typeName, String attrName, String attrVal) {
-        return getEntityByTypeAndUniqueAttribute(getEntitiesByOperation(EntityMutations.EntityOperation.CREATE), typeName, attrName, attrVal);
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getUpdatedEntityByTypeNameAndAttribute(String typeName, String attrName, String attrVal) {
-        return getEntityByTypeAndUniqueAttribute(getEntitiesByOperation(EntityMutations.EntityOperation.UPDATE), typeName, attrName, attrVal);
-    }
-
-    @JsonIgnore
-    public List<AtlasEntityHeader> getUpdatedEntitiesByTypeName(String typeName) {
-        return getEntitiesByType(getEntitiesByOperation(EntityMutations.EntityOperation.UPDATE), typeName);
-    }
-
-    @JsonIgnore
-    public List<AtlasEntityHeader> getDeletedEntitiesByTypeName(String typeName) {
-        return getEntitiesByType(getEntitiesByOperation(EntityMutations.EntityOperation.DELETE), typeName);
-    }
-
-    @JsonIgnore
-    public AtlasEntityHeader getFirstUpdatedEntityByTypeName(String typeName) {
-        return getFirstEntityByType(getEntitiesByOperation(EntityMutations.EntityOperation.UPDATE), typeName);
-    }
-
     public void addEntity(EntityMutations.EntityOperation op, AtlasEntityHeader header) {
         if (entitiesMutated == null) {
-            entitiesMutated = new HashMap<>();
+            entitiesMutated = new HashMap<EntityMutations.EntityOperation, List<AtlasEntityHeader>>();
         }
 
-        List<AtlasEntityHeader> opEntities = entitiesMutated.get(op);
-
-        if (opEntities == null) {
-            opEntities = new ArrayList<>();
-            entitiesMutated.put(op, opEntities);
+        if (entitiesMutated != null && entitiesMutated.get(op) == null) {
+            entitiesMutated.put(op, new ArrayList<AtlasEntityHeader>());
         }
-
-        opEntities.add(header);
+        entitiesMutated.get(op).add(header);
     }
 
 
@@ -171,71 +85,52 @@ public class EntityMutationResponse {
             sb = new StringBuilder();
         }
 
-        AtlasBaseTypeDef.dumpObjects(entitiesMutated, sb);
+        if (MapUtils.isNotEmpty(entitiesMutated)) {
+            int i = 0;
+            for (Map.Entry<EntityMutations.EntityOperation, List<AtlasEntityHeader>> e : entitiesMutated.entrySet()) {
+                if (i > 0) {
+                    sb.append(",");
+                }
+                sb.append(e.getKey()).append(":");
+                if (CollectionUtils.isNotEmpty(e.getValue())) {
+                    for (int j = 0; i < e.getValue().size(); j++) {
+                        if (j > 0) {
+                            sb.append(",");
+                        }
+                        e.getValue().get(i).toString(sb);
+                    }
+                }
+                i++;
+            }
+        }
 
         return sb;
     }
 
     @Override
     public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
+        if ( this == o) return true;
+
+        if ( this == null || getClass() != o.getClass()) return false;
+        if ( !super.equals(o)) return false;
+
         EntityMutationResponse that = (EntityMutationResponse) o;
-        return Objects.equals(entitiesMutated, that.entitiesMutated) &&
-               Objects.equals(guidAssignments, that.guidAssignments);
+
+        if ( entitiesMutated != null ? !entitiesMutated.equals(that.entitiesMutated) : that.entitiesMutated != null) {
+            return false;
+        }
+
+        return true;
     }
 
     @Override
     public int hashCode() {
-        return Objects.hash(entitiesMutated, guidAssignments);
+        int result = (entitiesMutated != null ? entitiesMutated.hashCode() : 0);
+        return result;
     }
 
     @Override
     public String toString() {
         return toString(new StringBuilder()).toString();
     }
-
-    private AtlasEntityHeader getFirstEntityByType(List<AtlasEntityHeader> entitiesByOperation, String typeName) {
-        if ( entitiesByOperation != null && entitiesByOperation.size() > 0) {
-            for (AtlasEntityHeader header : entitiesByOperation) {
-                if ( header.getTypeName().equals(typeName)) {
-                    return header;
-                }
-            }
-        }
-        return null;
-    }
-
-    private List<AtlasEntityHeader> getEntitiesByType(List<AtlasEntityHeader> entitiesByOperation, String typeName) {
-        List<AtlasEntityHeader> ret = new ArrayList<>();
-
-        if ( entitiesByOperation != null && entitiesByOperation.size() > 0) {
-            for (AtlasEntityHeader header : entitiesByOperation) {
-                if ( header.getTypeName().equals(typeName)) {
-                    ret.add(header);
-                }
-            }
-        }
-        return ret;
-    }
-
-    private AtlasEntityHeader getEntityByTypeAndUniqueAttribute(List<AtlasEntityHeader> entitiesByOperation, String typeName, String attrName, String attrVal) {
-        if (entitiesByOperation != null && entitiesByOperation.size() > 0) {
-            for (AtlasEntityHeader header : entitiesByOperation) {
-                if (header.getTypeName().equals(typeName)) {
-                    if (attrVal != null && attrVal.equals(header.getAttribute(attrName))) {
-                        return header;
-                    }
-                }
-            }
-        }
-        return null;
-    }
-    public void setGuidAssignments(Map<String,String> guidAssignments) {
-        this.guidAssignments = guidAssignments;
-    }
-
-    public Map<String,String> getGuidAssignments() {
-        return guidAssignments;
-    }
 }