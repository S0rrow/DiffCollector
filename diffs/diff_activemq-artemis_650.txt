diff --git a/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/protocol/core/impl/wireformat/MessagePacket.java b/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/protocol/core/impl/wireformat/MessagePacket.java
index 49989d3584..17d7c04112 100644
--- a/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/protocol/core/impl/wireformat/MessagePacket.java
+++ b/artemis-core-client/src/main/java/org/apache/activemq/artemis/core/protocol/core/impl/wireformat/MessagePacket.java
@@ -1,4 +1,4 @@
-/*
+/**
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements. See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -16,39 +16,24 @@
  */
 package org.apache.activemq.artemis.core.protocol.core.impl.wireformat;
 
-import io.netty.buffer.Unpooled;
-import org.apache.activemq.artemis.api.core.ActiveMQBuffer;
-import org.apache.activemq.artemis.api.core.ICoreMessage;
-import org.apache.activemq.artemis.core.buffers.impl.ChannelBufferWrapper;
+import org.apache.activemq.artemis.api.core.Message;
+import org.apache.activemq.artemis.core.message.impl.MessageInternal;
 import org.apache.activemq.artemis.core.protocol.core.impl.PacketImpl;
-import org.apache.activemq.artemis.spi.core.protocol.RemotingConnection;
 
-public abstract class MessagePacket extends PacketImpl implements MessagePacketI {
+public abstract class MessagePacket extends PacketImpl
+{
+   protected MessageInternal message;
 
-   protected ICoreMessage message;
-
-   public MessagePacket(final byte type, final ICoreMessage message) {
+   public MessagePacket(final byte type, final MessageInternal message)
+   {
       super(type);
 
       this.message = message;
    }
 
-   @Override
-   public ICoreMessage getMessage() {
+   public Message getMessage()
+   {
       return message;
    }
 
-   @Override
-   public String getParentString() {
-      return super.getParentString() + ", message=" + message;
-   }
-
-   protected ActiveMQBuffer internalCreatePacket(int size, RemotingConnection connection, boolean usePooled) {
-      if (connection == null) {
-         return new ChannelBufferWrapper(Unpooled.buffer(size));
-      } else {
-         return connection.createTransportBuffer(size, usePooled);
-      }
-   }
-
 }