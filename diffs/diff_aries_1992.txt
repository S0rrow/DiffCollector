diff --git a/tx-control/tx-control-provider-jdbc-xa/src/main/java/org/apache/aries/tx/control/jdbc/xa/impl/Activator.java b/tx-control/tx-control-provider-jdbc-xa/src/main/java/org/apache/aries/tx/control/jdbc/xa/impl/Activator.java
index 56754b814..dcfa6cf1c 100644
--- a/tx-control/tx-control-provider-jdbc-xa/src/main/java/org/apache/aries/tx/control/jdbc/xa/impl/Activator.java
+++ b/tx-control/tx-control-provider-jdbc-xa/src/main/java/org/apache/aries/tx/control/jdbc/xa/impl/Activator.java
@@ -23,8 +23,6 @@ import static org.osgi.framework.Constants.SERVICE_PID;
 import java.util.Dictionary;
 import java.util.Hashtable;
 
-import org.apache.aries.tx.control.jdbc.common.impl.InternalJDBCConnectionProviderFactory;
-import org.apache.aries.tx.control.jdbc.common.impl.JDBCConnectionProviderFactoryServiceFactory;
 import org.osgi.framework.BundleActivator;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.ServiceRegistration;
@@ -35,42 +33,22 @@ public class Activator implements BundleActivator {
 
 	private ServiceRegistration<JDBCConnectionProviderFactory> reg;
 	private ServiceRegistration<ManagedServiceFactory> factoryReg;
-	private JDBCConnectionProviderFactoryServiceFactory service;
-	private ManagedServiceFactoryImpl msf;
 	
 	@Override
 	public void start(BundleContext context) throws Exception {
-		InternalJDBCConnectionProviderFactory ijcpf = new JDBCConnectionProviderFactoryImpl();
-		
-		service = new JDBCConnectionProviderFactoryServiceFactory() {
-			@Override
-			protected InternalJDBCConnectionProviderFactory getInternalJDBCConnectionProviderFactory() {
-				return ijcpf;
-			}
-		};
-		
 		reg = context.registerService(JDBCConnectionProviderFactory.class, 
 				new JDBCConnectionProviderFactoryImpl(), getProperties());
 		
-		msf = new ManagedServiceFactoryImpl(context);
 		factoryReg = context.registerService(ManagedServiceFactory.class, 
-				msf, getMSFProperties());
+				new ManagedServiceFactoryImpl(context), getMSFProperties());
 	}
 
 	@Override
 	public void stop(BundleContext context) throws Exception {
-		safeUnregister(reg);
-		safeUnregister(factoryReg);
-		service.close();
-		msf.stop();
+		reg.unregister();
+		factoryReg.unregister();
 	}
 
-	private void safeUnregister(ServiceRegistration<?> reg) {
-		try {
-			reg.unregister();
-		} catch (IllegalStateException ise) {}
-	}
-	
 	private Dictionary<String, Object> getProperties() {
 		Dictionary<String, Object> props = new Hashtable<>();
 		props.put("osgi.local.enabled", Boolean.TRUE);