diff --git a/artemis-server/src/main/java/org/apache/activemq/artemis/core/persistence/impl/journal/codec/PersistentQueueBindingEncoding.java b/artemis-server/src/main/java/org/apache/activemq/artemis/core/persistence/impl/journal/codec/PersistentQueueBindingEncoding.java
index 570a7fcb40..169cd7df85 100644
--- a/artemis-server/src/main/java/org/apache/activemq/artemis/core/persistence/impl/journal/codec/PersistentQueueBindingEncoding.java
+++ b/artemis-server/src/main/java/org/apache/activemq/artemis/core/persistence/impl/journal/codec/PersistentQueueBindingEncoding.java
@@ -19,7 +19,6 @@ package org.apache.activemq.artemis.core.persistence.impl.journal.codec;
 import java.util.LinkedList;
 import java.util.List;
 
-import org.apache.activemq.artemis.api.config.ActiveMQDefaultConfiguration;
 import org.apache.activemq.artemis.api.core.ActiveMQBuffer;
 import org.apache.activemq.artemis.api.core.SimpleString;
 import org.apache.activemq.artemis.core.journal.EncodingSupport;
@@ -44,23 +43,7 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
 
    public int maxConsumers;
 
-   public boolean purgeOnNoConsumers;
-
-   public boolean exclusive;
-
-   public boolean lastValue;
-
-   public SimpleString lastValueKey;
-
-   public boolean nonDestructive;
-
-   public int consumersBeforeDispatch;
-
-   public long delayBeforeDispatch;
-
-   public byte routingType;
-
-   public boolean configurationManaged;
+   public boolean deleteOnNoConsumers;
 
    public PersistentQueueBindingEncoding() {
    }
@@ -80,24 +63,8 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
          autoCreated +
          ", maxConsumers=" +
          maxConsumers +
-         ", purgeOnNoConsumers=" +
-         purgeOnNoConsumers +
-         ", exclusive=" +
-         exclusive +
-         ", lastValue=" +
-         lastValue +
-         ", lastValueKey=" +
-         lastValueKey +
-         ", nonDestructive=" +
-         nonDestructive +
-         ", consumersBeforeDispatch=" +
-         consumersBeforeDispatch +
-         ", delayBeforeDispatch=" +
-         delayBeforeDispatch +
-         ", routingType=" +
-         routingType +
-         ", configurationManaged=" +
-         configurationManaged +
+         ", deleteOnNoConsumers=" +
+         deleteOnNoConsumers +
          "]";
    }
 
@@ -105,32 +72,12 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
                                          final SimpleString address,
                                          final SimpleString filterString,
                                          final SimpleString user,
-                                         final boolean autoCreated,
-                                         final int maxConsumers,
-                                         final boolean purgeOnNoConsumers,
-                                         final boolean exclusive,
-                                         final boolean lastValue,
-                                         final SimpleString lastValueKey,
-                                         final boolean nonDestructive,
-                                         final int consumersBeforeDispatch,
-                                         final long delayBeforeDispatch,
-                                         final byte routingType,
-                                         final boolean configurationManaged) {
+                                         final boolean autoCreated) {
       this.name = name;
       this.address = address;
       this.filterString = filterString;
       this.user = user;
       this.autoCreated = autoCreated;
-      this.maxConsumers = maxConsumers;
-      this.purgeOnNoConsumers = purgeOnNoConsumers;
-      this.exclusive = exclusive;
-      this.lastValue = lastValue;
-      this.lastValueKey = lastValueKey;
-      this.nonDestructive = nonDestructive;
-      this.consumersBeforeDispatch = consumersBeforeDispatch;
-      this.delayBeforeDispatch = delayBeforeDispatch;
-      this.routingType = routingType;
-      this.configurationManaged = configurationManaged;
    }
 
    @Override
@@ -172,16 +119,6 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
       return autoCreated;
    }
 
-   @Override
-   public boolean isConfigurationManaged() {
-      return configurationManaged;
-   }
-
-   @Override
-   public void setConfigurationManaged(boolean configurationManaged) {
-      this.configurationManaged = configurationManaged;
-   }
-
    @Override
    public void addQueueStatusEncoding(QueueStatusEncoding status) {
       if (queueStatusEncodings == null) {
@@ -197,92 +134,22 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
 
    @Override
    public int getMaxConsumers() {
-      return maxConsumers;
+      return 0;
    }
 
    @Override
    public void setMaxConsumers(int maxConsumers) {
-      this.maxConsumers = maxConsumers;
-   }
 
-   @Override
-   public boolean isPurgeOnNoConsumers() {
-      return purgeOnNoConsumers;
    }
 
    @Override
-   public void setPurgeOnNoConsumers(boolean purgeOnNoConsumers) {
-      this.purgeOnNoConsumers = purgeOnNoConsumers;
+   public boolean isDeleteOnNoConsumers() {
+      return false;
    }
 
    @Override
-   public boolean isExclusive() {
-      return exclusive;
-   }
-
-   @Override
-   public void setExclusive(boolean exclusive) {
-      this.exclusive = exclusive;
-   }
+   public void setDeleteOnNoConsumers() {
 
-   @Override
-   public boolean isLastValue() {
-      return lastValue;
-   }
-
-   @Override
-   public void setLastValue(boolean lastValue) {
-      this.lastValue = lastValue;
-   }
-
-   @Override
-   public SimpleString getLastValueKey() {
-      return lastValueKey;
-   }
-
-   @Override
-   public void setLastValueKey(SimpleString lastValueKey) {
-      this.lastValueKey = lastValueKey;
-   }
-
-   @Override
-   public boolean isNonDestructive() {
-      return nonDestructive;
-   }
-
-   @Override
-   public void setNonDestructive(boolean nonDestructive) {
-      this.nonDestructive = nonDestructive;
-   }
-
-   @Override
-   public int getConsumersBeforeDispatch() {
-      return consumersBeforeDispatch;
-   }
-
-   @Override
-   public void setConsumersBeforeDispatch(int consumersBeforeDispatch) {
-      this.consumersBeforeDispatch = consumersBeforeDispatch;
-   }
-
-   @Override
-   public long getDelayBeforeDispatch() {
-      return delayBeforeDispatch;
-   }
-
-   @Override
-   public void setDelayBeforeDispatch(long delayBeforeDispatch) {
-      this.delayBeforeDispatch = delayBeforeDispatch;
-   }
-
-   @Override
-   public byte getRoutingType() {
-      return routingType;
-   }
-
-   @Override
-   public void setRoutingType(byte routingType) {
-      this.routingType = routingType;
    }
 
    @Override
@@ -308,48 +175,10 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
 
       if (buffer.readableBytes() > 0) {
          maxConsumers = buffer.readInt();
-         purgeOnNoConsumers = buffer.readBoolean();
-         routingType = buffer.readByte();
-      } else {
-         maxConsumers = ActiveMQDefaultConfiguration.getDefaultMaxQueueConsumers();
-         purgeOnNoConsumers = ActiveMQDefaultConfiguration.getDefaultPurgeOnNoConsumers();
-         routingType = ActiveMQDefaultConfiguration.getDefaultRoutingType().getType();
-      }
-
-      if (buffer.readableBytes() > 0) {
-         exclusive = buffer.readBoolean();
+         deleteOnNoConsumers = buffer.readBoolean();
       } else {
-         exclusive = ActiveMQDefaultConfiguration.getDefaultExclusive();
-      }
-      if (buffer.readableBytes() > 0) {
-         lastValue = buffer.readBoolean();
-      } else {
-         lastValue = ActiveMQDefaultConfiguration.getDefaultLastValue();
-      }
-      if (buffer.readableBytes() > 0) {
-         consumersBeforeDispatch = buffer.readInt();
-      } else {
-         consumersBeforeDispatch = ActiveMQDefaultConfiguration.getDefaultConsumersBeforeDispatch();
-      }
-      if (buffer.readableBytes() > 0) {
-         delayBeforeDispatch = buffer.readLong();
-      } else {
-         delayBeforeDispatch = ActiveMQDefaultConfiguration.getDefaultDelayBeforeDispatch();
-      }
-      if (buffer.readableBytes() > 0) {
-         configurationManaged = buffer.readBoolean();
-      } else {
-         configurationManaged = false;
-      }
-      if (buffer.readableBytes() > 0) {
-         lastValueKey = buffer.readNullableSimpleString();
-      } else {
-         lastValueKey = ActiveMQDefaultConfiguration.getDefaultLastValueKey();
-      }
-      if (buffer.readableBytes() > 0) {
-         nonDestructive = buffer.readBoolean();
-      } else {
-         nonDestructive = ActiveMQDefaultConfiguration.getDefaultNonDestructive();
+         maxConsumers = -1;
+         deleteOnNoConsumers = false;
       }
    }
 
@@ -361,15 +190,7 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
       buffer.writeNullableSimpleString(createMetadata());
       buffer.writeBoolean(autoCreated);
       buffer.writeInt(maxConsumers);
-      buffer.writeBoolean(purgeOnNoConsumers);
-      buffer.writeByte(routingType);
-      buffer.writeBoolean(exclusive);
-      buffer.writeBoolean(lastValue);
-      buffer.writeInt(consumersBeforeDispatch);
-      buffer.writeLong(delayBeforeDispatch);
-      buffer.writeBoolean(configurationManaged);
-      buffer.writeNullableSimpleString(lastValueKey);
-      buffer.writeBoolean(nonDestructive);
+      buffer.writeBoolean(deleteOnNoConsumers);
    }
 
    @Override
@@ -378,14 +199,6 @@ public class PersistentQueueBindingEncoding implements EncodingSupport, QueueBin
          SimpleString.sizeofNullableString(filterString) + DataConstants.SIZE_BOOLEAN +
          SimpleString.sizeofNullableString(createMetadata()) +
          DataConstants.SIZE_INT +
-         DataConstants.SIZE_BOOLEAN +
-         DataConstants.SIZE_BYTE +
-         DataConstants.SIZE_BOOLEAN +
-         DataConstants.SIZE_BOOLEAN +
-         DataConstants.SIZE_INT +
-         DataConstants.SIZE_LONG +
-         DataConstants.SIZE_BOOLEAN +
-         SimpleString.sizeofNullableString(lastValueKey) +
          DataConstants.SIZE_BOOLEAN;
    }
 