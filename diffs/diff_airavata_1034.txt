diff --git a/tools/gsissh/src/main/java/org/apache/airavata/gsi/ssh/impl/GSISSHAbstractCluster.java b/tools/gsissh/src/main/java/org/apache/airavata/gsi/ssh/impl/GSISSHAbstractCluster.java
index 0ddea0f83..ca9094e86 100644
--- a/tools/gsissh/src/main/java/org/apache/airavata/gsi/ssh/impl/GSISSHAbstractCluster.java
+++ b/tools/gsissh/src/main/java/org/apache/airavata/gsi/ssh/impl/GSISSHAbstractCluster.java
@@ -21,7 +21,6 @@
 package org.apache.airavata.gsi.ssh.impl;
 
 import com.jcraft.jsch.*;
-
 import org.apache.airavata.gsi.ssh.api.*;
 import org.apache.airavata.gsi.ssh.api.authentication.*;
 import org.apache.airavata.gsi.ssh.api.job.JobDescriptor;
@@ -40,15 +39,12 @@ import org.slf4j.LoggerFactory;
 import javax.xml.transform.*;
 import javax.xml.transform.stream.StreamResult;
 import javax.xml.transform.stream.StreamSource;
-
 import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.IOException;
 import java.io.StringWriter;
 import java.net.URL;
 import java.security.SecureRandom;
-import java.util.List;
-import java.util.Map;
 
 public class GSISSHAbstractCluster implements Cluster {
     static {
@@ -215,6 +211,7 @@ public class GSISSHAbstractCluster implements Cluster {
                     " connecting user name - "
                     + serverInfo.getUserName(), e);
         }
+        System.out.println(session.isConnected());
     }
 
     public JobDescriptor cancelJob(String jobID) throws SSHApiException {
@@ -345,10 +342,6 @@ public class GSISSHAbstractCluster implements Cluster {
 
     public void scpTo(String remoteFile, String localFile) throws SSHApiException {
         try {
-            if(!session.isConnected()){
-                session.connect();
-            }
-            log.info("Transfering file:/" + localFile + " To:" + serverInfo.getHost() + ":" + remoteFile);
             SSHUtils.scpTo(remoteFile, localFile, session);
         } catch (IOException e) {
             throw new SSHApiException("Failed during scping local file:" + localFile + " to remote file "
@@ -361,10 +354,6 @@ public class GSISSHAbstractCluster implements Cluster {
 
     public void scpFrom(String remoteFile, String localFile) throws SSHApiException {
         try {
-            if(!session.isConnected()){
-                session.connect();
-            }
-            log.info("Transfering from:"+ serverInfo.getHost() + ":" + remoteFile + " To:" + "file:/" + localFile);
             SSHUtils.scpFrom(remoteFile, localFile, session);
         } catch (IOException e) {
             throw new SSHApiException("Failed during scping local file:" + localFile + " to remote file "
@@ -377,10 +366,6 @@ public class GSISSHAbstractCluster implements Cluster {
 
     public void makeDirectory(String directoryPath) throws SSHApiException {
         try {
-            if(!session.isConnected()){
-                session.connect();
-            }
-            log.info("Creating directory: " + serverInfo.getHost() + ":" + directoryPath);
             SSHUtils.makeDirectory(directoryPath, session);
         } catch (IOException e) {
             throw new SSHApiException("Failed during creating directory:" + directoryPath + " to remote file "
@@ -391,29 +376,6 @@ public class GSISSHAbstractCluster implements Cluster {
         }
     }
 
-    public List<String> listDirectory(String directoryPath) throws SSHApiException {
-        try {
-            if(!session.isConnected()){
-                session.connect();
-            }
-            log.info("Listing directory: " + serverInfo.getHost() + ":" + directoryPath);
-            return SSHUtils.listDirectory(directoryPath, session);
-        } catch (IOException e) {
-            throw new SSHApiException("Failed during creating directory:" + directoryPath + " to remote file "
-                    + serverInfo.getHost() + ":rFile", e);
-        } catch (JSchException e) {
-            throw new SSHApiException("Failed during creating directory :" + directoryPath + " to remote file "
-                    + serverInfo.getHost() + ":rFile", e);
-        }
-    }
-
-    public void getJobStatuses(String userName, Map<String,JobStatus> jobIDs)throws SSHApiException {
-        RawCommandInfo rawCommandInfo = jobManagerConfiguration.getUserBasedMonitorCommand(userName);
-        StandardOutReader stdOutReader = new StandardOutReader();
-        CommandExecutor.executeCommand(rawCommandInfo, this.getSession(), stdOutReader);
-        String result = getOutputifAvailable(stdOutReader, "Error getting job information from the resource !");
-        jobManagerConfiguration.getParser().parse(userName,jobIDs, result);
-    }
 
     public ServerInfo getServerInfo() {
         return serverInfo;
@@ -444,7 +406,7 @@ public class GSISSHAbstractCluster implements Cluster {
         String stdOutputString = jobIDReaderCommandOutput.getStdOutputString();
         String stdErrorString = jobIDReaderCommandOutput.getStdErrorString();
 
-        if ((stdOutputString == null || "".equals(stdOutputString)) &&
+        if ((stdOutputString == null && "".equals(stdOutputString)) &&
                 ((stdErrorString != null) && !("".equals(stdErrorString)))) {
             log.error("Standard Error output : " + stdErrorString);
             throw new SSHApiException(errorMsg + stdErrorString);
@@ -452,7 +414,4 @@ public class GSISSHAbstractCluster implements Cluster {
         return stdOutputString;
     }
 
-    public void disconnect() throws SSHApiException {
-        getSession().disconnect();
-    }
 }