diff --git a/asterix-om/src/main/java/edu/uci/ics/asterix/om/types/BuiltinType.java b/asterix-om/src/main/java/edu/uci/ics/asterix/om/types/BuiltinType.java
index ca13f393a6..97fb7296ed 100644
--- a/asterix-om/src/main/java/edu/uci/ics/asterix/om/types/BuiltinType.java
+++ b/asterix-om/src/main/java/edu/uci/ics/asterix/om/types/BuiltinType.java
@@ -3,9 +3,9 @@
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * you may obtain a copy of the License from
- *
+ * 
  *     http://www.apache.org/licenses/LICENSE-2.0
- *
+ * 
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@@ -738,33 +738,6 @@ public abstract class BuiltinType implements IAType {
         }
     };
 
-    // AUUID_STRING is used when converting between the string representation of
-    // UUID and corresponding a UUID instance
-    public static final BuiltinType AUUID_STRING = new LowerCaseConstructorType() {
-
-        @Override
-        public ATypeTag getTypeTag() {
-            return ATypeTag.UUID_STRING;
-        }
-
-        @Override
-        public String getDisplayName() {
-            return "UUID_STRING";
-        }
-
-        @Override
-        public String getTypeName() {
-            return "uuid_string";
-        }
-
-        @Override
-        public JSONObject toJSON() throws JSONException {
-            JSONObject type = new JSONObject();
-            type.put("type", getDisplayName());
-            return type;
-        }
-    };
-
     public static final IAType ANY = new BuiltinType() {
 
         private static final long serialVersionUID = 1L;
@@ -797,38 +770,6 @@ public abstract class BuiltinType implements IAType {
         }
     };
 
-    public static final BuiltinType SHORTWITHOUTTYPEINFO = new BuiltinType() {
-
-        private static final long serialVersionUID = 1L;
-
-        @Override
-        public ATypeTag getTypeTag() {
-            return ATypeTag.SHORTWITHOUTTYPEINFO;
-        }
-
-        @Override
-        public String getTypeName() {
-            return "shortwithouttypeinfo";
-        }
-
-        @Override
-        public String getDisplayName() {
-            return "SHORTWITHOUTTYPEINFO";
-        }
-
-        @Override
-        public String getConstructor() {
-            return null;
-        }
-
-        @Override
-        public JSONObject toJSON() throws JSONException {
-            JSONObject type = new JSONObject();
-            type.put("type", "SHORTWITHOUTTYPEINFO");
-            return type;
-        }
-    };
-
     public abstract String getConstructor();
 
     @Override