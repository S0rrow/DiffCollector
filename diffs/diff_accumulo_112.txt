diff --git a/server/src/main/java/org/apache/accumulo/server/master/tserverOps/ShutdownTServer.java b/server/src/main/java/org/apache/accumulo/server/master/tserverOps/ShutdownTServer.java
index 14672ff15f..deb8aba1fe 100644
--- a/server/src/main/java/org/apache/accumulo/server/master/tserverOps/ShutdownTServer.java
+++ b/server/src/main/java/org/apache/accumulo/server/master/tserverOps/ShutdownTServer.java
@@ -20,14 +20,14 @@ import org.apache.accumulo.core.Constants;
 import org.apache.accumulo.core.master.thrift.TabletServerStatus;
 import org.apache.accumulo.core.util.AddressUtil;
 import org.apache.accumulo.core.zookeeper.ZooUtil;
-import org.apache.accumulo.fate.Repo;
-import org.apache.accumulo.fate.zookeeper.IZooReaderWriter;
-import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;
+import org.apache.accumulo.core.zookeeper.ZooUtil.NodeExistsPolicy;
+import org.apache.accumulo.server.fate.Repo;
+import org.apache.accumulo.server.master.Master;
 import org.apache.accumulo.server.master.EventCoordinator.Listener;
 import org.apache.accumulo.server.master.LiveTServerSet.TServerConnection;
-import org.apache.accumulo.server.master.Master;
 import org.apache.accumulo.server.master.state.TServerInstance;
 import org.apache.accumulo.server.master.tableOps.MasterRepo;
+import org.apache.accumulo.server.zookeeper.IZooReaderWriter;
 import org.apache.accumulo.server.zookeeper.ZooLock;
 import org.apache.accumulo.server.zookeeper.ZooReaderWriter;
 import org.apache.log4j.Logger;
@@ -51,29 +51,29 @@ public class ShutdownTServer extends MasterRepo {
   }
   
   @Override
-  public Repo<Master> call(long tid, Master master) throws Exception {
+  public Repo<Master> call(long tid, Master m) throws Exception {
     // suppress assignment of tablets to the server
     if (force) {
       String tserver = AddressUtil.toString(server.getLocation());
-      String path = ZooUtil.getRoot(master.getInstance()) + Constants.ZTSERVERS + "/" + tserver;
+      String path = ZooUtil.getRoot(m.getInstance()) + Constants.ZTSERVERS + "/" + tserver;
       ZooLock.deleteLock(path);
-      path = ZooUtil.getRoot(master.getInstance()) + Constants.ZDEADTSERVERS + "/" + tserver;
+      path = ZooUtil.getRoot(m.getInstance()) + Constants.ZDEADTSERVERS + "/" + tserver;
       IZooReaderWriter zoo = ZooReaderWriter.getInstance();
       zoo.putPersistentData(path, "forced down".getBytes(), NodeExistsPolicy.OVERWRITE);
-      return null;
+      return new DisconnectLogger(server.getLocation().getAddress().getHostAddress());
     }
     
     // TODO move this to isReady() and drop while loop?
-    Listener listener = master.getEventCoordinator().getListener();
-    master.shutdownTServer(server);
-    while (master.onlineTabletServers().contains(server)) {
-      TServerConnection connection = master.getConnection(server);
+    Listener listener = m.getEventCoordinator().getListener();
+    m.shutdownTServer(server);
+    while (m.stillMaster() && m.onlineTabletServers().contains(server)) {
+      TServerConnection connection = m.getConnection(server);
       if (connection != null) {
         try {
           TabletServerStatus status = connection.getTableMap();
           if (status.tableMap != null && status.tableMap.isEmpty()) {
             log.info("tablet server hosts no tablets " + server);
-            connection.halt(master.getMasterLock());
+            connection.halt(m.getMasterLock());
             log.info("tablet server asked to halt " + server);
             break;
           }
@@ -86,7 +86,7 @@ public class ShutdownTServer extends MasterRepo {
       listener.waitForEvents(1000);
     }
     
-    return null;
+    return new DisconnectLogger(server.getLocation().getAddress().getHostAddress());
   }
   
   @Override