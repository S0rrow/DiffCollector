diff --git a/test/src/main/java/org/apache/accumulo/test/functional/DeleteRowsSplitIT.java b/test/src/main/java/org/apache/accumulo/test/functional/DeleteRowsSplitIT.java
index ed48d103f7..068000d6ed 100644
--- a/test/src/main/java/org/apache/accumulo/test/functional/DeleteRowsSplitIT.java
+++ b/test/src/main/java/org/apache/accumulo/test/functional/DeleteRowsSplitIT.java
@@ -16,7 +16,6 @@
  */
 package org.apache.accumulo.test.functional;
 
-import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
 import static java.nio.charset.StandardCharsets.UTF_8;
 import static org.junit.Assert.assertTrue;
 
@@ -42,6 +41,8 @@ import org.junit.Test;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
+import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
+
 // attempt to reproduce ACCUMULO-315
 public class DeleteRowsSplitIT extends AccumuloClusterHarness {
 
@@ -53,8 +54,8 @@ public class DeleteRowsSplitIT extends AccumuloClusterHarness {
   private static final Logger log = LoggerFactory.getLogger(DeleteRowsSplitIT.class);
 
   private static final String LETTERS = "abcdefghijklmnopqrstuvwxyz";
-  static final SortedSet<Text> SPLITS = new TreeSet<>();
-  static final List<String> ROWS = new ArrayList<>();
+  static final SortedSet<Text> SPLITS = new TreeSet<Text>();
+  static final List<String> ROWS = new ArrayList<String>();
   static {
     for (byte b : LETTERS.getBytes(UTF_8)) {
       SPLITS.add(new Text(new byte[] {b}));
@@ -124,7 +125,7 @@ public class DeleteRowsSplitIT extends AccumuloClusterHarness {
   }
 
   private void generateRandomRange(Text start, Text end) {
-    List<String> bunch = new ArrayList<>(ROWS);
+    List<String> bunch = new ArrayList<String>(ROWS);
     Collections.shuffle(bunch);
     if (bunch.get(0).compareTo((bunch.get(1))) < 0) {
       start.set(bunch.get(0));