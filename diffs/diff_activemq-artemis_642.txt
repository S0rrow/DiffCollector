diff --git a/artemis-server/src/main/java/org/apache/activemq/artemis/core/config/impl/ConfigurationImpl.java b/artemis-server/src/main/java/org/apache/activemq/artemis/core/config/impl/ConfigurationImpl.java
index bfa6c406a6..dce0998434 100644
--- a/artemis-server/src/main/java/org/apache/activemq/artemis/core/config/impl/ConfigurationImpl.java
+++ b/artemis-server/src/main/java/org/apache/activemq/artemis/core/config/impl/ConfigurationImpl.java
@@ -48,18 +48,15 @@ import org.apache.activemq.artemis.core.config.BridgeConfiguration;
 import org.apache.activemq.artemis.core.config.ClusterConnectionConfiguration;
 import org.apache.activemq.artemis.core.config.Configuration;
 import org.apache.activemq.artemis.core.config.ConnectorServiceConfiguration;
-import org.apache.activemq.artemis.core.config.CoreAddressConfiguration;
 import org.apache.activemq.artemis.core.config.CoreQueueConfiguration;
 import org.apache.activemq.artemis.core.config.DivertConfiguration;
 import org.apache.activemq.artemis.core.config.HAPolicyConfiguration;
 import org.apache.activemq.artemis.core.config.StoreConfiguration;
-import org.apache.activemq.artemis.core.config.WildcardConfiguration;
 import org.apache.activemq.artemis.core.config.ha.ReplicaPolicyConfiguration;
 import org.apache.activemq.artemis.core.config.ha.ReplicatedPolicyConfiguration;
 import org.apache.activemq.artemis.core.security.Role;
 import org.apache.activemq.artemis.core.server.ActiveMQServerLogger;
 import org.apache.activemq.artemis.core.server.JournalType;
-import org.apache.activemq.artemis.core.server.NetworkHealthCheck;
 import org.apache.activemq.artemis.core.server.SecuritySettingPlugin;
 import org.apache.activemq.artemis.core.server.group.impl.GroupingHandlerConfiguration;
 import org.apache.activemq.artemis.core.settings.impl.AddressSettings;
@@ -137,8 +134,6 @@ public class ConfigurationImpl implements Configuration, Serializable {
 
    private List<CoreQueueConfiguration> queueConfigurations = new ArrayList<>();
 
-   private List<CoreAddressConfiguration> addressConfigurations = new ArrayList<>();
-
    protected transient List<BroadcastGroupConfiguration> broadcastGroupConfigurations = new ArrayList<>();
 
    protected transient Map<String, DiscoveryGroupConfiguration> discoveryGroupConfigurations = new LinkedHashMap<>();
@@ -197,7 +192,7 @@ public class ConfigurationImpl implements Configuration, Serializable {
 
    protected boolean runSyncSpeedTest = ActiveMQDefaultConfiguration.isDefaultRunSyncSpeedTest();
 
-   private WildcardConfiguration wildcardConfiguration = new WildcardConfiguration();
+   private boolean wildcardRoutingEnabled = ActiveMQDefaultConfiguration.isDefaultWildcardRoutingEnabled();
 
    private boolean messageCounterEnabled = ActiveMQDefaultConfiguration.isDefaultMessageCounterEnabled();
 
@@ -266,22 +261,6 @@ public class ConfigurationImpl implements Configuration, Serializable {
 
    private String systemPropertyPrefix = ActiveMQDefaultConfiguration.getDefaultSystemPropertyPrefix();
 
-   private String networkCheckList = ActiveMQDefaultConfiguration.getDefaultNetworkCheckList();
-
-   private String networkURLList = ActiveMQDefaultConfiguration.getDefaultNetworkCheckURLList();
-
-   private long networkCheckPeriod = ActiveMQDefaultConfiguration.getDefaultNetworkCheckPeriod();
-
-   private int networkCheckTimeout = ActiveMQDefaultConfiguration.getDefaultNetworkCheckTimeout();
-
-   private String networkCheckNIC = ActiveMQDefaultConfiguration.getDefaultNetworkCheckNic();
-
-   private String networkCheckPingCommand = NetworkHealthCheck.IPV4_DEFAULT_COMMAND;
-
-   private String networkCheckPing6Command = NetworkHealthCheck.IPV6_DEFAULT_COMMAND;
-
-   private String internalNamingPrefix = ActiveMQDefaultConfiguration.getInternalNamingPrefix();
-
    /**
     * Parent folder for all data folders.
     */
@@ -300,6 +279,7 @@ public class ConfigurationImpl implements Configuration, Serializable {
       return systemPropertyPrefix;
    }
 
+
    @Override
    public Configuration parseSystemProperties() throws Exception {
       parseSystemProperties(System.getProperties());
@@ -308,25 +288,26 @@ public class ConfigurationImpl implements Configuration, Serializable {
 
    @Override
    public Configuration parseSystemProperties(Properties properties) throws Exception {
-      synchronized (properties) {
-         Map<String, Object> beanProperties = new HashMap<>();
-
-         for (Map.Entry<Object, Object> entry : properties.entrySet()) {
-            if (entry.getKey().toString().startsWith(systemPropertyPrefix)) {
-               String key = entry.getKey().toString().substring(systemPropertyPrefix.length());
-               logger.debug("Setting up config, " + key + "=" + entry.getValue());
-               beanProperties.put(key, entry.getValue());
-            }
-         }
 
-         if (!beanProperties.isEmpty()) {
-            BeanSupport.setData(this, beanProperties);
+      Map<String, Object> beanProperties = new HashMap<>();
+
+
+      for (Map.Entry<Object, Object> entry : properties.entrySet()) {
+         if (entry.getKey().toString().startsWith(systemPropertyPrefix)) {
+            String key = entry.getKey().toString().substring(systemPropertyPrefix.length());
+            logger.debug("Setting up config, " + key + "=" + entry.getValue());
+            beanProperties.put(key, entry.getValue());
          }
+      }
 
-         return this;
+      if (!beanProperties.isEmpty()) {
+         BeanSupport.setData(this, beanProperties);
       }
+
+      return this;
    }
 
+
    @Override
    public boolean isClustered() {
       return !getClusterConfigurations().isEmpty();
@@ -660,23 +641,6 @@ public class ConfigurationImpl implements Configuration, Serializable {
       return this;
    }
 
-   @Override
-   public List<CoreAddressConfiguration> getAddressConfigurations() {
-      return addressConfigurations;
-   }
-
-   @Override
-   public Configuration setAddressConfigurations(List<CoreAddressConfiguration> configs) {
-      this.addressConfigurations = configs;
-      return this;
-   }
-
-   @Override
-   public Configuration addAddressConfiguration(CoreAddressConfiguration config) {
-      this.addressConfigurations.add(config);
-      return this;
-   }
-
    @Override
    public Map<String, DiscoveryGroupConfiguration> getDiscoveryGroupConfigurations() {
       return discoveryGroupConfigurations;
@@ -898,27 +862,13 @@ public class ConfigurationImpl implements Configuration, Serializable {
    }
 
    @Override
-   @Deprecated
    public boolean isWildcardRoutingEnabled() {
-      return wildcardConfiguration.isEnabled();
+      return wildcardRoutingEnabled;
    }
 
    @Override
-   @Deprecated
    public ConfigurationImpl setWildcardRoutingEnabled(final boolean enabled) {
-      logger.info("Usage of wildcardRoutingEnabled configuration property is deprecated, please use wildCardConfiguration.enabled instead");
-      wildcardConfiguration.setEnabled(enabled);
-      return this;
-   }
-
-   @Override
-   public WildcardConfiguration getWildcardConfiguration() {
-      return wildcardConfiguration;
-   }
-
-   @Override
-   public Configuration setWildCardConfiguration(WildcardConfiguration wildcardConfiguration) {
-      this.wildcardConfiguration = wildcardConfiguration;
+      wildcardRoutingEnabled = enabled;
       return this;
    }
 
@@ -1590,7 +1540,7 @@ public class ConfigurationImpl implements Configuration, Serializable {
       result = prime * result + threadPoolMaxSize;
       result = prime * result + (int) (transactionTimeout ^ (transactionTimeout >>> 32));
       result = prime * result + (int) (transactionTimeoutScanPeriod ^ (transactionTimeoutScanPeriod >>> 32));
-      result = prime * result + ((wildcardConfiguration == null) ? 0 : wildcardConfiguration.hashCode());
+      result = prime * result + (wildcardRoutingEnabled ? 1231 : 1237);
       result = prime * result + (resolveProtocols ? 1231 : 1237);
       result = prime * result + (int) (journalLockAcquisitionTimeout ^ (journalLockAcquisitionTimeout >>> 32));
       result = prime * result + (int) (connectionTtlCheckInterval ^ (connectionTtlCheckInterval >>> 32));
@@ -1816,10 +1766,7 @@ public class ConfigurationImpl implements Configuration, Serializable {
          return false;
       if (transactionTimeoutScanPeriod != other.transactionTimeoutScanPeriod)
          return false;
-      if (wildcardConfiguration == null) {
-         if (other.wildcardConfiguration != null)
-            return false;
-      } else if (!wildcardConfiguration.equals(other.wildcardConfiguration))
+      if (wildcardRoutingEnabled != other.wildcardRoutingEnabled)
          return false;
       if (resolveProtocols != other.resolveProtocols)
          return false;
@@ -1921,106 +1868,12 @@ public class ConfigurationImpl implements Configuration, Serializable {
       return diskScanPeriod;
    }
 
-   @Override
-   public String getInternalNamingPrefix() {
-      return internalNamingPrefix;
-   }
-
-   @Override
-   public ConfigurationImpl setInternalNamingPrefix(String internalNamingPrefix) {
-      this.internalNamingPrefix = internalNamingPrefix;
-      return this;
-   }
-
    @Override
    public ConfigurationImpl setDiskScanPeriod(int diskScanPeriod) {
       this.diskScanPeriod = diskScanPeriod;
       return this;
    }
 
-   @Override
-   public ConfigurationImpl setNetworkCheckList(String list) {
-      this.networkCheckList = list;
-      return this;
-   }
-
-   @Override
-   public String getNetworkCheckList() {
-      return networkCheckList;
-   }
-
-   @Override
-   public ConfigurationImpl setNetworkCheckURLList(String urls) {
-      this.networkURLList = urls;
-      return this;
-   }
-
-   @Override
-   public String getNetworkCheckURLList() {
-      return networkURLList;
-   }
-
-   /**
-    * The interval on which we will perform network checks.
-    */
-   @Override
-   public ConfigurationImpl setNetworkCheckPeriod(long period) {
-      this.networkCheckPeriod = period;
-      return this;
-   }
-
-   @Override
-   public long getNetworkCheckPeriod() {
-      return this.networkCheckPeriod;
-   }
-
-   /**
-    * Time in ms for how long we should wait for a ping to finish.
-    */
-   @Override
-   public ConfigurationImpl setNetworkCheckTimeout(int timeout) {
-      this.networkCheckTimeout = timeout;
-      return this;
-   }
-
-   @Override
-   public int getNetworkCheckTimeout() {
-      return this.networkCheckTimeout;
-   }
-
-   @Override
-   public Configuration setNetworCheckNIC(String nic) {
-      this.networkCheckNIC = nic;
-      return this;
-   }
-
-   @Override
-   public String getNetworkCheckNIC() {
-      return networkCheckNIC;
-   }
-
-   @Override
-   public String getNetworkCheckPingCommand() {
-      return networkCheckPingCommand;
-   }
-
-   @Override
-   public ConfigurationImpl setNetworkCheckPingCommand(String command) {
-      this.networkCheckPingCommand = command;
-      return this;
-   }
-
-   @Override
-   public String getNetworkCheckPing6Command() {
-      return networkCheckPing6Command;
-   }
-
-   @Override
-   public Configuration setNetworkCheckPing6Command(String command) {
-      this.networkCheckPing6Command = command;
-      return this;
-   }
-
    /**
     * It will find the right location of a subFolder, related to artemisInstance
     */