diff --git a/server/monitor/src/main/java/org/apache/accumulo/monitor/Monitor.java b/server/monitor/src/main/java/org/apache/accumulo/monitor/Monitor.java
index 9dc4cef904..9e44e707cf 100644
--- a/server/monitor/src/main/java/org/apache/accumulo/monitor/Monitor.java
+++ b/server/monitor/src/main/java/org/apache/accumulo/monitor/Monitor.java
@@ -16,11 +16,10 @@
  */
 package org.apache.accumulo.monitor;
 
-import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
 import static java.nio.charset.StandardCharsets.UTF_8;
 
+import java.net.InetAddress;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -61,7 +60,6 @@ import org.apache.accumulo.fate.util.LoggingRunnable;
 import org.apache.accumulo.fate.zookeeper.ZooLock.LockLossReason;
 import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeExistsPolicy;
 import org.apache.accumulo.fate.zookeeper.ZooUtil.NodeMissingPolicy;
-import org.apache.accumulo.monitor.servlets.BulkImportServlet;
 import org.apache.accumulo.monitor.servlets.DefaultServlet;
 import org.apache.accumulo.monitor.servlets.GcStatusServlet;
 import org.apache.accumulo.monitor.servlets.JSONServlet;
@@ -100,6 +98,7 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import com.google.common.net.HostAndPort;
+import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
 
 /**
  * Serve master statistics with an embedded web server.
@@ -256,10 +255,7 @@ public class Monitor {
           public void run() {
             synchronized (Monitor.class) {
               if (cachedInstanceName.get().equals(DEFAULT_INSTANCE_NAME)) {
-                final String instanceName = HdfsZooInstance.getInstance().getInstanceName();
-                if (null != instanceName) {
-                  cachedInstanceName.set(instanceName);
-                }
+                cachedInstanceName.set(HdfsZooInstance.getInstance().getInstanceName());
               }
             }
           }
@@ -432,8 +428,6 @@ public class Monitor {
     instance = HdfsZooInstance.getInstance();
     config = new ServerConfigurationFactory(instance);
     context = new AccumuloServerContext(config);
-    log.info("Version " + Constants.VERSION);
-    log.info("Instance " + instance.getInstanceID());
     Accumulo.init(fs, config, app);
     Monitor monitor = new Monitor();
     DistributedTrace.enable(hostname, app, config.getConfiguration());
@@ -455,41 +449,38 @@ public class Monitor {
     }
 
     Monitor.START_TIME = System.currentTimeMillis();
-    int ports[] = config.getConfiguration().getPort(Property.MONITOR_PORT);
-    for (int port : ports) {
-      try {
-        log.debug("Creating monitor on port " + port);
-        server = new EmbeddedWebServer(hostname, port);
-        server.addServlet(DefaultServlet.class, "/");
-        server.addServlet(OperationServlet.class, "/op");
-        server.addServlet(MasterServlet.class, "/master");
-        server.addServlet(TablesServlet.class, "/tables");
-        server.addServlet(TServersServlet.class, "/tservers");
-        server.addServlet(ProblemServlet.class, "/problems");
-        server.addServlet(GcStatusServlet.class, "/gc");
-        server.addServlet(LogServlet.class, "/log");
-        server.addServlet(XMLServlet.class, "/xml");
-        server.addServlet(JSONServlet.class, "/json");
-        server.addServlet(VisServlet.class, "/vis");
-        server.addServlet(ScanServlet.class, "/scans");
-        server.addServlet(BulkImportServlet.class, "/bulkImports");
-        server.addServlet(Summary.class, "/trace/summary");
-        server.addServlet(ListType.class, "/trace/listType");
-        server.addServlet(ShowTrace.class, "/trace/show");
-        server.addServlet(ReplicationServlet.class, "/replication");
-        if (server.isUsingSsl())
-          server.addServlet(ShellServlet.class, "/shell");
-        server.start();
-        break;
-      } catch (Throwable ex) {
-        log.error("Unable to start embedded web server", ex);
-      }
-    }
-    if (!server.isRunning()) {
-      throw new RuntimeException("Unable to start embedded web server on ports: " + Arrays.toString(ports));
-    }
+    int port = config.getConfiguration().getPort(Property.MONITOR_PORT);
+    try {
+      log.debug("Creating monitor on port " + port);
+      server = new EmbeddedWebServer(hostname, port);
+    } catch (Throwable ex) {
+      log.error("Unable to start embedded web server", ex);
+      throw new RuntimeException(ex);
+    }
+
+    server.addServlet(DefaultServlet.class, "/");
+    server.addServlet(OperationServlet.class, "/op");
+    server.addServlet(MasterServlet.class, "/master");
+    server.addServlet(TablesServlet.class, "/tables");
+    server.addServlet(TServersServlet.class, "/tservers");
+    server.addServlet(ProblemServlet.class, "/problems");
+    server.addServlet(GcStatusServlet.class, "/gc");
+    server.addServlet(LogServlet.class, "/log");
+    server.addServlet(XMLServlet.class, "/xml");
+    server.addServlet(JSONServlet.class, "/json");
+    server.addServlet(VisServlet.class, "/vis");
+    server.addServlet(ScanServlet.class, "/scans");
+    server.addServlet(Summary.class, "/trace/summary");
+    server.addServlet(ListType.class, "/trace/listType");
+    server.addServlet(ShowTrace.class, "/trace/show");
+    server.addServlet(ReplicationServlet.class, "/replication");
+    if (server.isUsingSsl())
+      server.addServlet(ShellServlet.class, "/shell");
+    server.start();
 
     try {
+      hostname = InetAddress.getLocalHost().getHostName();
+
       log.debug("Using " + hostname + " to advertise monitor location in ZooKeeper");
 
       String monitorAddress = HostAndPort.fromParts(hostname, server.getPort()).toString();