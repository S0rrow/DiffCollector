diff --git a/test/src/main/java/org/apache/accumulo/test/functional/DynamicThreadPoolsIT.java b/test/src/main/java/org/apache/accumulo/test/functional/DynamicThreadPoolsIT.java
index ab54b3a84d..62bac85309 100644
--- a/test/src/main/java/org/apache/accumulo/test/functional/DynamicThreadPoolsIT.java
+++ b/test/src/main/java/org/apache/accumulo/test/functional/DynamicThreadPoolsIT.java
@@ -16,7 +16,6 @@
  */
 package org.apache.accumulo.test.functional;
 
-import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
 import static org.junit.Assert.fail;
 
 import java.util.Map;
@@ -29,8 +28,7 @@ import org.apache.accumulo.core.client.Connector;
 import org.apache.accumulo.core.client.impl.ClientContext;
 import org.apache.accumulo.core.client.impl.Credentials;
 import org.apache.accumulo.core.client.impl.MasterClient;
-import org.apache.accumulo.core.client.impl.thrift.ThriftNotActiveServiceException;
-import org.apache.accumulo.core.conf.ConfigurationTypeHelper;
+import org.apache.accumulo.core.conf.AccumuloConfiguration;
 import org.apache.accumulo.core.conf.Property;
 import org.apache.accumulo.core.master.thrift.MasterClientService;
 import org.apache.accumulo.core.master.thrift.MasterMonitorInfo;
@@ -45,6 +43,8 @@ import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 
+import static com.google.common.util.concurrent.Uninterruptibles.sleepUninterruptibly;
+
 public class DynamicThreadPoolsIT extends AccumuloClusterHarness {
 
   @Override
@@ -68,7 +68,7 @@ public class DynamicThreadPoolsIT extends AccumuloClusterHarness {
     majcDelay = c.instanceOperations().getSystemConfiguration().get(Property.TSERV_MAJC_DELAY.getKey());
     c.instanceOperations().setProperty(Property.TSERV_MAJC_DELAY.getKey(), "100ms");
     if (getClusterType() == ClusterType.STANDALONE) {
-      Thread.sleep(ConfigurationTypeHelper.getTimeInMillis(majcDelay));
+      Thread.sleep(AccumuloConfiguration.getTimeInMillis(majcDelay));
     }
   }
 
@@ -106,18 +106,12 @@ public class DynamicThreadPoolsIT extends AccumuloClusterHarness {
       int count = 0;
       MasterClientService.Iface client = null;
       MasterMonitorInfo stats = null;
-      while (true) {
-        try {
-          client = MasterClient.getConnectionWithRetry(new ClientContext(c.getInstance(), creds, clientConf));
-          stats = client.getMasterStats(Tracer.traceInfo(), creds.toThrift(c.getInstance()));
-          break;
-        } catch (ThriftNotActiveServiceException e) {
-          // Let it loop, fetching a new location
-          sleepUninterruptibly(100, TimeUnit.MILLISECONDS);
-        } finally {
-          if (client != null)
-            MasterClient.close(client);
-        }
+      try {
+        client = MasterClient.getConnectionWithRetry(new ClientContext(c.getInstance(), creds, clientConf));
+        stats = client.getMasterStats(Tracer.traceInfo(), creds.toThrift(c.getInstance()));
+      } finally {
+        if (client != null)
+          MasterClient.close(client);
       }
       for (TabletServerStatus server : stats.tServerInfo) {
         for (TableInfo table : server.tableMap.values()) {