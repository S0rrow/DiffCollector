diff --git a/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java b/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java
index a39dfb07a..728bec3ee 100644
--- a/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java
+++ b/webapp/src/main/java/org/apache/atlas/web/rest/TypesREST.java
@@ -33,7 +33,6 @@ import org.apache.atlas.model.typedef.AtlasTypesDef;
 import org.apache.atlas.store.AtlasTypeDefStore;
 import org.apache.atlas.type.AtlasTypeRegistry;
 import org.apache.atlas.web.util.Servlets;
-import org.apache.http.annotation.Experimental;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -65,7 +64,7 @@ public class TypesREST {
     private HttpServletRequest httpServletRequest;
 
     @Inject
-    public TypesREST(AtlasTypeDefStore typeDefStore) {
+    public TypesREST(AtlasTypeDefStore typeDefStore, AtlasTypeRegistry atlasTypeRegistry) {
         LOG.info("new TypesREST");
         this.typeDefStore = typeDefStore;
     }
@@ -351,7 +350,7 @@ public class TypesREST {
         AtlasEntityDef ret = null;
 
         try {
-            ret = typeDefStore.createEntityDef(entityDef);
+            ret = typeDefStore.createEntityDefs(entityDef);
             return ret;
         } catch (AtlasBaseException ex) {
             throw new WebApplicationException(Servlets.getErrorResponse(ex, Response.Status.BAD_REQUEST));
@@ -384,7 +383,6 @@ public class TypesREST {
     @Path("/entitydef/name/{name}")
     @Consumes(Servlets.JSON_MEDIA_TYPE)
     @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
     public AtlasEntityDef updateEntityDefByName(@PathParam("name") String name, AtlasEntityDef entityDef) throws Exception {
         AtlasEntityDef ret = null;
 
@@ -397,7 +395,6 @@ public class TypesREST {
     @Path("/entitydef/guid/{guid}")
     @Consumes(Servlets.JSON_MEDIA_TYPE)
     @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
     public AtlasEntityDef updateEntityDefByGuid(@PathParam("guid") String guid, AtlasEntityDef entityDef) throws Exception {
         AtlasEntityDef ret = null;
 
@@ -409,7 +406,6 @@ public class TypesREST {
     @DELETE
     @Path("/entitydef/name/{name}")
     @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
     public void deleteEntityDef(@PathParam("name") String name) throws Exception {
         typeDefStore.deleteEntityDefByName(name);
     }
@@ -417,7 +413,6 @@ public class TypesREST {
     @DELETE
     @Path("/entitydef/guid/{guid}")
     @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
     public void deleteEntityDefByGuid(@PathParam("guid") String guid) throws Exception {
         typeDefStore.deleteEntityDefByGuid(guid);
     }
@@ -493,7 +488,6 @@ public class TypesREST {
     @Path("/typedefs")
     @Consumes(Servlets.JSON_MEDIA_TYPE)
     @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
     public AtlasTypesDef updateAtlasTypeDefs(final AtlasTypesDef typesDef) throws Exception {
         AtlasTypesDef ret = null;
 
@@ -506,24 +500,6 @@ public class TypesREST {
         return ret;
     }
 
-    /**
-     * Bulk delete API for all types
-     * @param typesDef A composite object that captures all types to be deleted
-     * @throws Exception
-     */
-    @DELETE
-    @Path("/typedefs")
-    @Consumes(Servlets.JSON_MEDIA_TYPE)
-    @Produces(Servlets.JSON_MEDIA_TYPE)
-    @Experimental
-    public void deleteAtlasTypeDefs(final AtlasTypesDef typesDef) {
-        try {
-            typeDefStore.deleteTypesDef(typesDef);
-        } catch (AtlasBaseException ex) {
-            throw new WebApplicationException(Servlets.getErrorResponse(ex, Response.Status.NOT_MODIFIED));
-        }
-    }
-
     /**
      * Populate a SearchFilter on the basis of the Query Parameters
      * @return