diff --git a/graphdb/common/src/test/java/org/apache/atlas/graph/GraphSandboxUtil.java b/graphdb/common/src/test/java/org/apache/atlas/graph/GraphSandboxUtil.java
index b8a9a49a3..44ad4fc0e 100644
--- a/graphdb/common/src/test/java/org/apache/atlas/graph/GraphSandboxUtil.java
+++ b/graphdb/common/src/test/java/org/apache/atlas/graph/GraphSandboxUtil.java
@@ -24,54 +24,29 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.File;
-import java.util.UUID;
 
 public class GraphSandboxUtil {
     private static final Logger LOG = LoggerFactory.getLogger(GraphSandboxUtil.class);
 
-    public static void create(String sandboxName) {
+    public static void create() {
         Configuration configuration;
         try {
             configuration = ApplicationProperties.get();
+            // Append a suffix to isolate the database for each instance
+            long currentMillisecs = System.currentTimeMillis();
 
             String newStorageDir = System.getProperty("atlas.data") +
-                    File.separatorChar + "storage" +
-                    File.separatorChar + sandboxName;
-
+                    File.pathSeparator + "storage" +
+                    File.pathSeparator + currentMillisecs;
             configuration.setProperty("atlas.graph.storage.directory", newStorageDir);
 
-
             String newIndexerDir = System.getProperty("atlas.data") +
-                    File.separatorChar + "index" +
-                    File.separatorChar + sandboxName;
-
+                    File.pathSeparator + "index" +
+                    File.pathSeparator + currentMillisecs;
             configuration.setProperty("atlas.graph.index.search.directory", newIndexerDir);
 
-
             LOG.debug("New Storage dir : {}", newStorageDir);
             LOG.debug("New Indexer dir : {}", newIndexerDir);
         } catch (AtlasException ignored) {}
     }
-
-    public static void create() {
-        // Append a suffix to isolate the database for each instance
-        UUID uuid = UUID.randomUUID();
-        create(uuid.toString());
-    }
-
-    // Need to start local Solr Cloud for JanusGraph 0.2.0
-    public static boolean useLocalSolr() {
-        boolean ret = false;
-        
-        try {
-            Configuration conf     = ApplicationProperties.get();
-            Object        property = conf.getProperty("atlas.graph.index.search.solr.embedded");
-
-            if (property != null && property instanceof String) {
-                ret = Boolean.valueOf((String) property);
-            }
-        } catch (AtlasException ignored) {}
-
-        return ret;
-    }
 }