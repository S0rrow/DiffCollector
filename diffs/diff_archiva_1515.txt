diff --git a/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoriesService.java b/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoriesService.java
index dc1dc6bec..8272f2701 100644
--- a/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoriesService.java
+++ b/archiva-modules/archiva-web/archiva-rest/archiva-rest-api/src/main/java/org/apache/archiva/rest/api/services/RepositoriesService.java
@@ -19,12 +19,10 @@
  * under the License.
  */
 
-import org.apache.archiva.maven2.model.Artifact;
-import org.apache.archiva.metadata.model.ArtifactMetadata;
-import org.apache.archiva.redback.authorization.RedbackAuthorization;
-import org.apache.archiva.repository.scanner.RepositoryScanStatistics;
+import org.apache.archiva.rest.api.model.Artifact;
 import org.apache.archiva.rest.api.model.ArtifactTransferRequest;
 import org.apache.archiva.security.common.ArchivaRoleConstants;
+import org.codehaus.plexus.redback.authorization.RedbackAuthorization;
 
 import javax.ws.rs.Consumes;
 import javax.ws.rs.GET;
@@ -34,115 +32,77 @@
 import javax.ws.rs.Produces;
 import javax.ws.rs.QueryParam;
 import javax.ws.rs.core.MediaType;
-import java.util.List;
 
 /**
  * @author Olivier Lamy
  * @since 1.4-M1
  */
-@Path ( "/repositoriesService/" )
+@Path( "/repositoriesService/" )
 public interface RepositoriesService
 {
 
-    @Path ( "scanRepository" )
+    @Path( "scanRepository" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    /**
-     * index repository
-     */
-    Boolean scanRepository( @QueryParam ( "repositoryId" ) String repositoryId,
-                            @QueryParam ( "fullScan" ) boolean fullScan )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( permission = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
+    Boolean scanRepository( @QueryParam( "repositoryId" ) String repositoryId,
+                            @QueryParam( "fullScan" ) boolean fullScan )
         throws ArchivaRestServiceException;
 
 
-    @Path ( "scanRepositoryDirectoriesNow/{repositoryId}" )
+    @Path( "alreadyScanning/{repositoryId}" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    /**
-     * scan directories
-     * @since 1.4-M3
-     */
-    RepositoryScanStatistics scanRepositoryDirectoriesNow( @PathParam ( "repositoryId" ) String repositoryId )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( permission = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
+    Boolean alreadyScanning( @PathParam( "repositoryId" ) String repositoryId )
         throws ArchivaRestServiceException;
 
-
-    @Path ( "alreadyScanning/{repositoryId}" )
+    @Path( "removeScanningTaskFromQueue/{repositoryId}" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    Boolean alreadyScanning( @PathParam ( "repositoryId" ) String repositoryId )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( permission = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
+    Boolean removeScanningTaskFromQueue( @PathParam( "repositoryId" ) String repositoryId )
         throws ArchivaRestServiceException;
 
-    @Path ( "removeScanningTaskFromQueue/{repositoryId}" )
+    @Path( "scanRepositoryNow" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    Boolean removeScanningTaskFromQueue( @PathParam ( "repositoryId" ) String repositoryId )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( permission = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
+    Boolean scanRepositoryNow( @QueryParam( "repositoryId" ) String repositoryId,
+                               @QueryParam( "fullScan" ) boolean fullScan )
         throws ArchivaRestServiceException;
 
-    @Path ( "scanRepositoryNow" )
-    @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    Boolean scanRepositoryNow( @QueryParam ( "repositoryId" ) String repositoryId,
-                               @QueryParam ( "fullScan" ) boolean fullScan )
-        throws ArchivaRestServiceException;
-
-    @Path ( "copyArtifact" )
+    @Path( "copyArtifact" )
     @POST
-    @Consumes ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML } )
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( noPermission = true )
+    @Consumes( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML } )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( noPermission = true )
     /**
-     * permissions are checked in impl
+     * permission are checked in impl
      * will copy an artifact from the source repository to the target repository
      */
     Boolean copyArtifact( ArtifactTransferRequest artifactTransferRequest )
         throws ArchivaRestServiceException;
 
-    @Path ( "scheduleDownloadRemoteIndex" )
+    @Path( "scheduleDownloadRemoteIndex" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( permissions = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
-    Boolean scheduleDownloadRemoteIndex( @QueryParam ( "repositoryId" ) String repositoryId,
-                                         @QueryParam ( "now" ) boolean now,
-                                         @QueryParam ( "fullDownload" ) boolean fullDownload )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( permission = ArchivaRoleConstants.OPERATION_RUN_INDEXER )
+    Boolean scheduleDownloadRemoteIndex( @QueryParam( "repositoryId" ) String repositoryId,
+                                         @QueryParam( "now" ) boolean now,
+                                         @QueryParam( "fullDownload" ) boolean fullDownload )
         throws ArchivaRestServiceException;
 
 
-    @Path ( "deleteArtifact" )
-    @POST
-    @Consumes ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML } )
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( noPermission = true )
-    /**
-     * <b>permissions are checked in impl</b>
-     * @since 1.4-M2
-     */
-    Boolean deleteArtifact( Artifact artifact )
-        throws ArchivaRestServiceException;
-
-    @Path ( "isAuthorizedToDeleteArtifacts/{repositoryId}" )
+    @Path( "deleteArtifact" )
     @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( noPermission = true, noRestriction = true )
-    Boolean isAuthorizedToDeleteArtifacts( @PathParam ( "repositoryId" ) String repoId )
-        throws ArchivaRestServiceException;
-
-    @Path ( "deleteGroupId" )
-    @GET
-    @Produces ( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
-    @RedbackAuthorization ( noPermission = true )
+    @Produces( { MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML, MediaType.TEXT_PLAIN } )
+    @RedbackAuthorization( noPermission = true )
     /**
-     * <b>permissions are checked in impl</b>
-     * @since 1.4-M3
+     * permission are checked in impl
      */
-    Boolean deleteGroupId( @QueryParam ( "groupId" ) String groupId,
-                           @QueryParam ( "repositoryId" ) String repositoryId )
+    Boolean deleteArtifact( @QueryParam( "" ) Artifact artifact, @QueryParam( "repositoryId" ) String repositoryId )
         throws ArchivaRestServiceException;
 
 
-
 }